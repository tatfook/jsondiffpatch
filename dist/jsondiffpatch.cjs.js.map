{"version":3,"file":"jsondiffpatch.cjs.js","sources":["../src/processor.ts","../src/pipe.ts","../src/contexts/context.ts","../src/clone.ts","../src/contexts/diff.ts","../src/contexts/patch.ts","../src/contexts/reverse.ts","../src/filters/trivial.ts","../src/filters/nested.ts","../src/filters/lcs.ts","../src/filters/arrays.ts","../src/filters/dates.ts","../src/filters/texts.ts","../src/diffpatcher.ts","../src/date-reviver.ts","../src/formatters/base.ts","../src/formatters/html.ts","../src/formatters/annotated.ts","../src/formatters/jsonpatch.ts","../src/formatters/console.ts","../src/main.ts"],"sourcesContent":["import type Context from './contexts/context';\nimport type Pipe from './pipe';\nimport type { Options } from './types';\nimport type DiffContext from './contexts/diff';\nimport type PatchContext from './contexts/patch';\nimport type ReverseContext from './contexts/reverse';\n\nclass Processor {\n  selfOptions: Options;\n  pipes: {\n    diff: Pipe<DiffContext>;\n    patch: Pipe<PatchContext>;\n    reverse: Pipe<ReverseContext>;\n  };\n\n  constructor(options?: Options) {\n    this.selfOptions = options || {};\n    this.pipes = {} as {\n      diff: Pipe<DiffContext>;\n      patch: Pipe<PatchContext>;\n      reverse: Pipe<ReverseContext>;\n    };\n  }\n\n  options(options?: Options) {\n    if (options) {\n      this.selfOptions = options;\n    }\n    return this.selfOptions;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  pipe<TContext extends Context<any>>(\n    name: string | Pipe<TContext>,\n    pipeArg?: Pipe<TContext>,\n  ) {\n    let pipe = pipeArg;\n    if (typeof name === 'string') {\n      if (typeof pipe === 'undefined') {\n        return this.pipes[name as keyof typeof this.pipes]!;\n      } else {\n        this.pipes[name as keyof typeof this.pipes] = pipe as Pipe<\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          Context<any>\n        >;\n      }\n    }\n    if (name && (name as Pipe<TContext>).name) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      pipe = name as Pipe<Context<any>>;\n      if (pipe.processor === this) {\n        return pipe;\n      }\n      this.pipes[pipe.name as keyof typeof this.pipes] = pipe as Pipe<\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Context<any>\n      >;\n    }\n    pipe!.processor = this;\n    return pipe!;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  process<TContext extends Context<any>>(\n    input: TContext,\n    pipe?: Pipe<TContext>,\n  ): TContext['result'] | undefined {\n    let context = input;\n    context.options = this.options();\n    let nextPipe: Pipe<TContext> | string | null =\n      pipe || input.pipe || 'default';\n    let lastPipe;\n    while (nextPipe) {\n      if (typeof context.nextAfterChildren !== 'undefined') {\n        // children processed and coming back to parent\n        context.next = context.nextAfterChildren;\n        context.nextAfterChildren = null;\n      }\n\n      if (typeof nextPipe === 'string') {\n        nextPipe = this.pipe(nextPipe) as Pipe<TContext>;\n      }\n      nextPipe.process(context);\n      lastPipe = nextPipe;\n      nextPipe = null;\n      if (context) {\n        if (context.next) {\n          context = context.next;\n          nextPipe = context.pipe || lastPipe;\n        }\n      }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return context.hasResult ? context.result : undefined;\n  }\n}\n\nexport default Processor;\n","import type Context from './contexts/context';\nimport type Processor from './processor';\nimport type { Filter } from './types';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nclass Pipe<TContext extends Context<any>> {\n  name: string;\n  filters: Filter<TContext>[];\n  processor?: Processor;\n  debug?: boolean;\n  resultCheck?: ((context: TContext) => void) | null;\n\n  constructor(name: string) {\n    this.name = name;\n    this.filters = [];\n  }\n\n  process(input: TContext) {\n    if (!this.processor) {\n      throw new Error('add this pipe to a processor before using it');\n    }\n    const debug = this.debug;\n    const length = this.filters.length;\n    const context = input;\n    for (let index = 0; index < length; index++) {\n      const filter = this.filters[index];\n      if (debug) {\n        this.log(`filter: ${filter.filterName}`);\n      }\n      filter(context);\n      if (typeof context === 'object' && context.exiting) {\n        context.exiting = false;\n        break;\n      }\n    }\n    if (!context.next && this.resultCheck) {\n      this.resultCheck(context);\n    }\n  }\n\n  log(msg: string) {\n    console.log(`[jsondiffpatch] ${this.name} pipe, ${msg}`);\n  }\n\n  append(...args: Filter<TContext>[]) {\n    this.filters.push(...args);\n    return this;\n  }\n\n  prepend(...args: Filter<TContext>[]) {\n    this.filters.unshift(...args);\n    return this;\n  }\n\n  indexOf(filterName: string) {\n    if (!filterName) {\n      throw new Error('a filter name is required');\n    }\n    for (let index = 0; index < this.filters.length; index++) {\n      const filter = this.filters[index];\n      if (filter.filterName === filterName) {\n        return index;\n      }\n    }\n    throw new Error(`filter not found: ${filterName}`);\n  }\n\n  list() {\n    return this.filters.map((f) => f.filterName);\n  }\n\n  after(filterName: string, ...params: Filter<TContext>[]) {\n    const index = this.indexOf(filterName);\n    this.filters.splice(index + 1, 0, ...params);\n    return this;\n  }\n\n  before(filterName: string, ...params: Filter<TContext>[]) {\n    const index = this.indexOf(filterName);\n    this.filters.splice(index, 0, ...params);\n    return this;\n  }\n\n  replace(filterName: string, ...params: Filter<TContext>[]) {\n    const index = this.indexOf(filterName);\n    this.filters.splice(index, 1, ...params);\n    return this;\n  }\n\n  remove(filterName: string) {\n    const index = this.indexOf(filterName);\n    this.filters.splice(index, 1);\n    return this;\n  }\n\n  clear() {\n    this.filters.length = 0;\n    return this;\n  }\n\n  shouldHaveResult(should?: boolean) {\n    if (should === false) {\n      this.resultCheck = null;\n      return;\n    }\n    if (this.resultCheck) {\n      return;\n    }\n    this.resultCheck = (context) => {\n      if (!context.hasResult) {\n        console.log(context);\n        const error: Error & { noResult?: boolean } = new Error(\n          `${this.name} failed`,\n        );\n        error.noResult = true;\n        throw error;\n      }\n    };\n    return this;\n  }\n}\n\nexport default Pipe;\n","import type { Options } from '../types';\n\nexport default abstract class Context<TResult> {\n  abstract pipe: string;\n\n  result?: TResult;\n  hasResult?: boolean;\n  exiting?: boolean;\n  parent?: this;\n  childName?: string | number;\n  root?: this;\n  options?: Options;\n  children?: this[];\n  nextAfterChildren?: this | null;\n  next?: this | null;\n\n  setResult(result: TResult) {\n    this.result = result;\n    this.hasResult = true;\n    return this;\n  }\n\n  exit() {\n    this.exiting = true;\n    return this;\n  }\n\n  push(child: this, name?: string | number) {\n    child.parent = this;\n    if (typeof name !== 'undefined') {\n      child.childName = name;\n    }\n    child.root = this.root || this;\n    child.options = child.options || this.options;\n    if (!this.children) {\n      this.children = [child];\n      this.nextAfterChildren = this.next || null;\n      this.next = child;\n    } else {\n      this.children[this.children.length - 1].next = child;\n      this.children.push(child);\n    }\n    child.next = this;\n    return this;\n  }\n}\n","function cloneRegExp(re: RegExp) {\n  const regexMatch = /^\\/(.*)\\/([gimyu]*)$/.exec(re.toString())!;\n  return new RegExp(regexMatch[1], regexMatch[2]);\n}\n\nexport default function clone(arg: unknown): unknown {\n  if (typeof arg !== 'object') {\n    return arg;\n  }\n  if (arg === null) {\n    return null;\n  }\n  if (Array.isArray(arg)) {\n    return arg.map(clone);\n  }\n  if (arg instanceof Date) {\n    return new Date(arg.getTime());\n  }\n  if (arg instanceof RegExp) {\n    return cloneRegExp(arg);\n  }\n  const cloned = {};\n  for (const name in arg) {\n    if (Object.prototype.hasOwnProperty.call(arg, name)) {\n      (cloned as Record<string, unknown>)[name] = clone(\n        (arg as Record<string, unknown>)[name],\n      );\n    }\n  }\n  return cloned;\n}\n","import Context from './context';\nimport defaultClone from '../clone';\nimport type { Delta } from '../types';\n\nclass DiffContext extends Context<Delta> {\n  left: unknown;\n  right: unknown;\n  pipe: 'diff';\n\n  leftType?: string;\n  rightType?: string;\n  leftIsArray?: boolean;\n  rightIsArray?: boolean;\n\n  constructor(left: unknown, right: unknown) {\n    super();\n    this.left = left;\n    this.right = right;\n    this.pipe = 'diff';\n  }\n\n  setResult(result: Delta) {\n    if (this.options!.cloneDiffValues && typeof result === 'object') {\n      const clone =\n        typeof this.options!.cloneDiffValues === 'function'\n          ? this.options!.cloneDiffValues\n          : defaultClone;\n      if (typeof result[0] === 'object') {\n        result[0] = clone(result[0]);\n      }\n      if (typeof result[1] === 'object') {\n        result[1] = clone(result[1]);\n      }\n    }\n    return super.setResult(result);\n  }\n}\n\nexport default DiffContext;\n","import Context from './context';\nimport type { Delta } from '../types';\n\nclass PatchContext extends Context<unknown> {\n  left: unknown;\n  delta: Delta;\n  pipe: 'patch';\n\n  nested?: boolean;\n\n  constructor(left: unknown, delta: Delta) {\n    super();\n    this.left = left;\n    this.delta = delta;\n    this.pipe = 'patch';\n  }\n}\n\nexport default PatchContext;\n","import Context from './context';\nimport type { Delta } from '../types';\n\nclass ReverseContext extends Context<Delta> {\n  delta: Delta;\n  pipe: 'reverse';\n\n  nested?: boolean;\n  newName?: `_${number}`;\n\n  constructor(delta: Delta) {\n    super();\n    this.delta = delta;\n    this.pipe = 'reverse';\n  }\n}\n\nexport default ReverseContext;\n","import type DiffContext from '../contexts/diff';\nimport type PatchContext from '../contexts/patch';\nimport type ReverseContext from '../contexts/reverse';\nimport type {\n  AddedDelta,\n  DeletedDelta,\n  Filter,\n  ModifiedDelta,\n  MovedDelta,\n  TextDiffDelta,\n} from '../types';\n\nexport const diffFilter: Filter<DiffContext> =\n  function trivialMatchesDiffFilter(context) {\n    if (context.left === context.right) {\n      context.setResult(undefined).exit();\n      return;\n    }\n    if (typeof context.left === 'undefined') {\n      if (typeof context.right === 'function') {\n        throw new Error('functions are not supported');\n      }\n      context.setResult([context.right]).exit();\n      return;\n    }\n    if (typeof context.right === 'undefined') {\n      context.setResult([context.left, 0, 0]).exit();\n      return;\n    }\n    if (\n      typeof context.left === 'function' ||\n      typeof context.right === 'function'\n    ) {\n      throw new Error('functions are not supported');\n    }\n    context.leftType = context.left === null ? 'null' : typeof context.left;\n    context.rightType = context.right === null ? 'null' : typeof context.right;\n    if (context.leftType !== context.rightType) {\n      context.setResult([context.left, context.right]).exit();\n      return;\n    }\n    if (context.leftType === 'boolean' || context.leftType === 'number') {\n      context.setResult([context.left, context.right]).exit();\n      return;\n    }\n    if (context.leftType === 'object') {\n      context.leftIsArray = Array.isArray(context.left);\n    }\n    if (context.rightType === 'object') {\n      context.rightIsArray = Array.isArray(context.right);\n    }\n    if (context.leftIsArray !== context.rightIsArray) {\n      context.setResult([context.left, context.right]).exit();\n      return;\n    }\n\n    if (context.left instanceof RegExp) {\n      if (context.right instanceof RegExp) {\n        context\n          .setResult([context.left.toString(), context.right.toString()])\n          .exit();\n      } else {\n        context.setResult([context.left, context.right]).exit();\n      }\n    }\n  };\ndiffFilter.filterName = 'trivial';\n\nexport const patchFilter: Filter<PatchContext> =\n  function trivialMatchesPatchFilter(context) {\n    if (typeof context.delta === 'undefined') {\n      context.setResult(context.left).exit();\n      return;\n    }\n    context.nested = !Array.isArray(context.delta);\n    if (context.nested) {\n      return;\n    }\n    const nonNestedDelta = context.delta as\n      | AddedDelta\n      | ModifiedDelta\n      | DeletedDelta\n      | MovedDelta\n      | TextDiffDelta;\n    if (nonNestedDelta.length === 1) {\n      context.setResult(nonNestedDelta[0]).exit();\n      return;\n    }\n    if (nonNestedDelta.length === 2) {\n      if (context.left instanceof RegExp) {\n        const regexArgs = /^\\/(.*)\\/([gimyu]+)$/.exec(\n          nonNestedDelta[1] as string,\n        );\n        if (regexArgs) {\n          context.setResult(new RegExp(regexArgs[1], regexArgs[2])).exit();\n          return;\n        }\n      }\n      context.setResult(nonNestedDelta[1]).exit();\n      return;\n    }\n    if (nonNestedDelta.length === 3 && nonNestedDelta[2] === 0) {\n      context.setResult(undefined).exit();\n    }\n  };\npatchFilter.filterName = 'trivial';\n\nexport const reverseFilter: Filter<ReverseContext> =\n  function trivialReferseFilter(context) {\n    if (typeof context.delta === 'undefined') {\n      context.setResult(context.delta).exit();\n      return;\n    }\n    context.nested = !Array.isArray(context.delta);\n    if (context.nested) {\n      return;\n    }\n    const nonNestedDelta = context.delta as\n      | AddedDelta\n      | ModifiedDelta\n      | DeletedDelta\n      | MovedDelta\n      | TextDiffDelta;\n    if (nonNestedDelta.length === 1) {\n      context.setResult([nonNestedDelta[0], 0, 0]).exit();\n      return;\n    }\n    if (nonNestedDelta.length === 2) {\n      context.setResult([nonNestedDelta[1], nonNestedDelta[0]]).exit();\n      return;\n    }\n    if (nonNestedDelta.length === 3 && nonNestedDelta[2] === 0) {\n      context.setResult([nonNestedDelta[0]]).exit();\n    }\n  };\nreverseFilter.filterName = 'trivial';\n","import DiffContext from '../contexts/diff';\nimport PatchContext from '../contexts/patch';\nimport ReverseContext from '../contexts/reverse';\nimport type { ArrayDelta, Delta, Filter, ObjectDelta } from '../types';\n\nexport const collectChildrenDiffFilter: Filter<DiffContext> = (context) => {\n  if (!context || !context.children) {\n    return;\n  }\n  const length = context.children.length;\n  let child;\n  let result = context.result as ObjectDelta | ArrayDelta;\n  for (let index = 0; index < length; index++) {\n    child = context.children[index];\n    if (typeof child.result === 'undefined') {\n      continue;\n    }\n    result = result || {};\n    (result as Record<string | number, Delta>)[child.childName!] = child.result;\n  }\n  if (result && context.leftIsArray) {\n    result._t = 'a';\n  }\n  context.setResult(result).exit();\n};\ncollectChildrenDiffFilter.filterName = 'collectChildren';\n\nexport const objectsDiffFilter: Filter<DiffContext> = (context) => {\n  if (context.leftIsArray || context.leftType !== 'object') {\n    return;\n  }\n\n  const left = context.left as Record<string, unknown>;\n  const right = context.right as Record<string, unknown>;\n\n  let name;\n  let child;\n  const propertyFilter = context.options!.propertyFilter;\n  for (name in left) {\n    if (!Object.prototype.hasOwnProperty.call(left, name)) {\n      continue;\n    }\n    if (propertyFilter && !propertyFilter(name, context)) {\n      continue;\n    }\n    child = new DiffContext(left[name], right[name]);\n    context.push(child, name);\n  }\n  for (name in right) {\n    if (!Object.prototype.hasOwnProperty.call(right, name)) {\n      continue;\n    }\n    if (propertyFilter && !propertyFilter(name, context)) {\n      continue;\n    }\n    if (typeof left[name] === 'undefined') {\n      child = new DiffContext(undefined, right[name]);\n      context.push(child, name);\n    }\n  }\n\n  if (!context.children || context.children.length === 0) {\n    context.setResult(undefined).exit();\n    return;\n  }\n  context.exit();\n};\nobjectsDiffFilter.filterName = 'objects';\n\nexport const patchFilter: Filter<PatchContext> = function nestedPatchFilter(\n  context,\n) {\n  if (!context.nested) {\n    return;\n  }\n  const nestedDelta = context.delta as ObjectDelta | ArrayDelta;\n  if (nestedDelta._t) {\n    return;\n  }\n  const objectDelta = nestedDelta as ObjectDelta;\n  let name;\n  let child;\n  for (name in objectDelta) {\n    child = new PatchContext(\n      (context.left as Record<string, unknown>)[name],\n      objectDelta[name],\n    );\n    context.push(child, name);\n  }\n  context.exit();\n};\npatchFilter.filterName = 'objects';\n\nexport const collectChildrenPatchFilter: Filter<PatchContext> =\n  function collectChildrenPatchFilter(context) {\n    if (!context || !context.children) {\n      return;\n    }\n    const deltaWithChildren = context.delta as ObjectDelta | ArrayDelta;\n    if (deltaWithChildren._t) {\n      return;\n    }\n    const object = context.left as Record<string, unknown>;\n    const length = context.children.length;\n    let child;\n    for (let index = 0; index < length; index++) {\n      child = context.children[index];\n      const property = child.childName as string;\n      if (\n        Object.prototype.hasOwnProperty.call(context.left, property) &&\n        child.result === undefined\n      ) {\n        delete object[property];\n      } else if (object[property] !== child.result) {\n        object[property] = child.result;\n      }\n    }\n    context.setResult(object).exit();\n  };\ncollectChildrenPatchFilter.filterName = 'collectChildren';\n\nexport const reverseFilter: Filter<ReverseContext> =\n  function nestedReverseFilter(context) {\n    if (!context.nested) {\n      return;\n    }\n    const nestedDelta = context.delta as ObjectDelta | ArrayDelta;\n    if (nestedDelta._t) {\n      return;\n    }\n    const objectDelta = context.delta as ObjectDelta;\n    let name;\n    let child;\n    for (name in objectDelta) {\n      child = new ReverseContext(objectDelta[name]);\n      context.push(child, name);\n    }\n    context.exit();\n  };\nreverseFilter.filterName = 'objects';\n\nexport const collectChildrenReverseFilter: Filter<ReverseContext> = (\n  context,\n) => {\n  if (!context || !context.children) {\n    return;\n  }\n  const deltaWithChildren = context.delta as ObjectDelta | ArrayDelta;\n  if (deltaWithChildren._t) {\n    return;\n  }\n  const length = context.children.length;\n  let child;\n  const delta: ObjectDelta = {};\n  for (let index = 0; index < length; index++) {\n    child = context.children[index];\n    const property = child.childName as string;\n    if (delta[property] !== child.result) {\n      delta[property] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n};\ncollectChildrenReverseFilter.filterName = 'collectChildren';\n","/*\n\nLCS implementation that supports arrays or strings\n\nreference: http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n\n*/\n\nimport type { MatchContext } from './arrays';\n\nconst defaultMatch = function (\n  array1: readonly unknown[],\n  array2: readonly unknown[],\n  index1: number,\n  index2: number,\n) {\n  return array1[index1] === array2[index2];\n};\n\nconst lengthMatrix = function (\n  array1: readonly unknown[],\n  array2: readonly unknown[],\n  match: (\n    array1: readonly unknown[],\n    array2: readonly unknown[],\n    index1: number,\n    index2: number,\n    context: MatchContext,\n  ) => boolean | undefined,\n  context: MatchContext,\n) {\n  const len1 = array1.length;\n  const len2 = array2.length;\n  let x, y;\n\n  // initialize empty matrix of len1+1 x len2+1\n  const matrix: number[][] & {\n    match?: (\n      array1: readonly unknown[],\n      array2: readonly unknown[],\n      index1: number,\n      index2: number,\n      context: MatchContext,\n    ) => boolean | undefined;\n  } = new Array(len1 + 1);\n  for (x = 0; x < len1 + 1; x++) {\n    matrix[x] = new Array<number>(len2 + 1);\n    for (y = 0; y < len2 + 1; y++) {\n      matrix[x][y] = 0;\n    }\n  }\n  matrix.match = match;\n  // save sequence lengths for each coordinate\n  for (x = 1; x < len1 + 1; x++) {\n    for (y = 1; y < len2 + 1; y++) {\n      if (match(array1, array2, x - 1, y - 1, context)) {\n        matrix[x][y] = matrix[x - 1][y - 1] + 1;\n      } else {\n        matrix[x][y] = Math.max(matrix[x - 1][y], matrix[x][y - 1]);\n      }\n    }\n  }\n  return matrix;\n};\n\ninterface Subsequence {\n  sequence: unknown[];\n  indices1: number[];\n  indices2: number[];\n}\n\nconst backtrack = function (\n  matrix: number[][] & {\n    match?: (\n      array1: readonly unknown[],\n      array2: readonly unknown[],\n      index1: number,\n      index2: number,\n      context: MatchContext,\n    ) => boolean | undefined;\n  },\n  array1: readonly unknown[],\n  array2: readonly unknown[],\n  context: MatchContext,\n) {\n  let index1 = array1.length;\n  let index2 = array2.length;\n  const subsequence: Subsequence = {\n    sequence: [],\n    indices1: [],\n    indices2: [],\n  };\n\n  while (index1 !== 0 && index2 !== 0) {\n    const sameLetter = matrix.match!(\n      array1,\n      array2,\n      index1 - 1,\n      index2 - 1,\n      context,\n    );\n    if (sameLetter) {\n      subsequence.sequence.unshift(array1[index1 - 1]);\n      subsequence.indices1.unshift(index1 - 1);\n      subsequence.indices2.unshift(index2 - 1);\n      --index1;\n      --index2;\n    } else {\n      const valueAtMatrixAbove = matrix[index1][index2 - 1];\n      const valueAtMatrixLeft = matrix[index1 - 1][index2];\n      if (valueAtMatrixAbove > valueAtMatrixLeft) {\n        --index2;\n      } else {\n        --index1;\n      }\n    }\n  }\n  return subsequence;\n};\n\nconst get = function (\n  array1: readonly unknown[],\n  array2: readonly unknown[],\n  match?: (\n    array1: readonly unknown[],\n    array2: readonly unknown[],\n    index1: number,\n    index2: number,\n    context: MatchContext,\n  ) => boolean | undefined,\n  context?: MatchContext,\n) {\n  const innerContext = context || {};\n  const matrix = lengthMatrix(\n    array1,\n    array2,\n    match || defaultMatch,\n    innerContext,\n  );\n  return backtrack(matrix, array1, array2, innerContext);\n};\n\nexport default {\n  get,\n};\n","import DiffContext from '../contexts/diff';\nimport PatchContext from '../contexts/patch';\nimport ReverseContext from '../contexts/reverse';\n\nimport lcs from './lcs';\n\nimport type {\n  AddedDelta,\n  ArrayDelta,\n  DeletedDelta,\n  Delta,\n  Filter,\n  ModifiedDelta,\n  MovedDelta,\n  ObjectDelta,\n  TextDiffDelta,\n} from '../types';\n\nconst ARRAY_MOVE = 3;\n\nfunction arraysHaveMatchByRef(\n  array1: readonly unknown[],\n  array2: readonly unknown[],\n  len1: number,\n  len2: number,\n) {\n  for (let index1 = 0; index1 < len1; index1++) {\n    const val1 = array1[index1];\n    for (let index2 = 0; index2 < len2; index2++) {\n      const val2 = array2[index2];\n      if (index1 !== index2 && val1 === val2) {\n        return true;\n      }\n    }\n  }\n}\n\nexport interface MatchContext {\n  objectHash?:\n    | ((item: object, index?: number) => string | undefined)\n    | undefined;\n  matchByPosition?: boolean | undefined;\n  hashCache1?: (string | undefined)[];\n  hashCache2?: (string | undefined)[];\n}\n\nfunction matchItems(\n  array1: readonly unknown[],\n  array2: readonly unknown[],\n  index1: number,\n  index2: number,\n  context: MatchContext,\n) {\n  const value1 = array1[index1];\n  const value2 = array2[index2];\n  if (value1 === value2) {\n    return true;\n  }\n  if (typeof value1 !== 'object' || typeof value2 !== 'object') {\n    return false;\n  }\n  const objectHash = context.objectHash;\n  if (!objectHash) {\n    // no way to match objects was provided, try match by position\n    return context.matchByPosition && index1 === index2;\n  }\n  context.hashCache1 = context.hashCache1 || [];\n  let hash1 = context.hashCache1[index1];\n  if (typeof hash1 === 'undefined') {\n    context.hashCache1[index1] = hash1 = objectHash(value1 as object, index1);\n  }\n  if (typeof hash1 === 'undefined') {\n    return false;\n  }\n  context.hashCache2 = context.hashCache2 || [];\n  let hash2 = context.hashCache2[index2];\n  if (typeof hash2 === 'undefined') {\n    context.hashCache2[index2] = hash2 = objectHash(value2 as object, index2);\n  }\n  if (typeof hash2 === 'undefined') {\n    return false;\n  }\n  return hash1 === hash2;\n}\n\nexport const diffFilter: Filter<DiffContext> = function arraysDiffFilter(\n  context,\n) {\n  if (!context.leftIsArray) {\n    return;\n  }\n\n  const matchContext: MatchContext = {\n    objectHash: context.options && context.options.objectHash,\n    matchByPosition: context.options && context.options.matchByPosition,\n  };\n  let commonHead = 0;\n  let commonTail = 0;\n  let index;\n  let index1;\n  let index2;\n  const array1 = context.left as readonly unknown[];\n  const array2 = context.right as readonly unknown[];\n  const len1 = array1.length;\n  const len2 = array2.length;\n\n  let child;\n\n  if (\n    len1 > 0 &&\n    len2 > 0 &&\n    !matchContext.objectHash &&\n    typeof matchContext.matchByPosition !== 'boolean'\n  ) {\n    matchContext.matchByPosition = !arraysHaveMatchByRef(\n      array1,\n      array2,\n      len1,\n      len2,\n    );\n  }\n\n  // separate common head\n  while (\n    commonHead < len1 &&\n    commonHead < len2 &&\n    matchItems(array1, array2, commonHead, commonHead, matchContext)\n  ) {\n    index = commonHead;\n    child = new DiffContext(array1[index], array2[index]);\n    context.push(child, index);\n    commonHead++;\n  }\n  // separate common tail\n  while (\n    commonTail + commonHead < len1 &&\n    commonTail + commonHead < len2 &&\n    matchItems(\n      array1,\n      array2,\n      len1 - 1 - commonTail,\n      len2 - 1 - commonTail,\n      matchContext,\n    )\n  ) {\n    index1 = len1 - 1 - commonTail;\n    index2 = len2 - 1 - commonTail;\n    child = new DiffContext(array1[index1], array2[index2]);\n    context.push(child, index2);\n    commonTail++;\n  }\n  let result:\n    | {\n        _t: 'a';\n        [index: number]: AddedDelta;\n        [index: `_${number}`]: MovedDelta | DeletedDelta;\n      }\n    | undefined;\n  if (commonHead + commonTail === len1) {\n    if (len1 === len2) {\n      // arrays are identical\n      context.setResult(undefined).exit();\n      return;\n    }\n    // trivial case, a block (1 or more consecutive items) was added\n    result = result || {\n      _t: 'a',\n    };\n    for (index = commonHead; index < len2 - commonTail; index++) {\n      result[index] = [array2[index]];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  if (commonHead + commonTail === len2) {\n    // trivial case, a block (1 or more consecutive items) was removed\n    result = result || {\n      _t: 'a',\n    };\n    for (index = commonHead; index < len1 - commonTail; index++) {\n      result[`_${index}`] = [array1[index], 0, 0];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  // reset hash cache\n  delete matchContext.hashCache1;\n  delete matchContext.hashCache2;\n\n  // diff is not trivial, find the LCS (Longest Common Subsequence)\n  const trimmed1 = array1.slice(commonHead, len1 - commonTail);\n  const trimmed2 = array2.slice(commonHead, len2 - commonTail);\n  const seq = lcs.get(trimmed1, trimmed2, matchItems, matchContext);\n  const removedItems = [];\n  result = result || {\n    _t: 'a',\n  };\n  for (index = commonHead; index < len1 - commonTail; index++) {\n    if (seq.indices1.indexOf(index - commonHead) < 0) {\n      // removed\n      result[`_${index}`] = [array1[index], 0, 0];\n      removedItems.push(index);\n    }\n  }\n\n  let detectMove = true;\n  if (\n    context.options &&\n    context.options.arrays &&\n    context.options.arrays.detectMove === false\n  ) {\n    detectMove = false;\n  }\n  let includeValueOnMove = false;\n  if (\n    context.options &&\n    context.options.arrays &&\n    context.options.arrays.includeValueOnMove\n  ) {\n    includeValueOnMove = true;\n  }\n\n  const removedItemsLength = removedItems.length;\n  for (index = commonHead; index < len2 - commonTail; index++) {\n    const indexOnArray2 = seq.indices2.indexOf(index - commonHead);\n    if (indexOnArray2 < 0) {\n      // added, try to match with a removed item and register as position move\n      let isMove = false;\n      if (detectMove && removedItemsLength > 0) {\n        for (\n          let removeItemIndex1 = 0;\n          removeItemIndex1 < removedItemsLength;\n          removeItemIndex1++\n        ) {\n          index1 = removedItems[removeItemIndex1];\n          if (\n            matchItems(\n              trimmed1,\n              trimmed2,\n              index1 - commonHead,\n              index - commonHead,\n              matchContext,\n            )\n          ) {\n            // store position move as: [originalValue, newPosition, ARRAY_MOVE]\n            result[`_${index1}`].splice(1, 2, index, ARRAY_MOVE);\n            if (!includeValueOnMove) {\n              // don't include moved value on diff, to save bytes\n              result[`_${index1}`][0] = '';\n            }\n\n            index2 = index;\n            child = new DiffContext(array1[index1], array2[index2]);\n            context.push(child, index2);\n            removedItems.splice(removeItemIndex1, 1);\n            isMove = true;\n            break;\n          }\n        }\n      }\n      if (!isMove) {\n        // added\n        result[index] = [array2[index]];\n      }\n    } else {\n      // match, do inner diff\n      index1 = seq.indices1[indexOnArray2] + commonHead;\n      index2 = seq.indices2[indexOnArray2] + commonHead;\n      child = new DiffContext(array1[index1], array2[index2]);\n      context.push(child, index2);\n    }\n  }\n\n  context.setResult(result).exit();\n};\ndiffFilter.filterName = 'arrays';\n\nconst compare = {\n  numerically(this: void, a: number, b: number) {\n    return a - b;\n  },\n  numericallyBy<T>(\n    name: { [K in keyof T]: T[K] extends number ? K : never }[keyof T],\n  ) {\n    return (a: T, b: T) => (a[name] as number) - (b[name] as number);\n  },\n};\n\nexport const patchFilter: Filter<PatchContext> = function nestedPatchFilter(\n  context,\n) {\n  if (!context.nested) {\n    return;\n  }\n  const nestedDelta = context.delta as ObjectDelta | ArrayDelta;\n  if (nestedDelta._t !== 'a') {\n    return;\n  }\n  let index;\n  let index1;\n\n  const delta = nestedDelta as ArrayDelta;\n  const array = context.left as unknown[];\n\n  // first, separate removals, insertions and modifications\n  let toRemove: number[] = [];\n  let toInsert: { index: number; value: unknown }[] = [];\n  const toModify: { index: number; delta: Delta }[] = [];\n  for (index in delta) {\n    if (index !== '_t') {\n      if (index[0] === '_') {\n        const removedOrMovedIndex = index as `_${number}`;\n        // removed item from original array\n        if (\n          delta[removedOrMovedIndex][2] === 0 ||\n          delta[removedOrMovedIndex][2] === ARRAY_MOVE\n        ) {\n          toRemove.push(parseInt(index.slice(1), 10));\n        } else {\n          throw new Error(\n            'only removal or move can be applied at original array indices,' +\n              ` invalid diff type: ${delta[removedOrMovedIndex][2]}`,\n          );\n        }\n      } else {\n        const numberIndex = index as `${number}`;\n        if ((delta[numberIndex] as unknown[]).length === 1) {\n          // added item at new array\n          toInsert.push({\n            index: parseInt(numberIndex, 10),\n            value: (delta[numberIndex] as AddedDelta)[0],\n          });\n        } else {\n          // modified item at new array\n          toModify.push({\n            index: parseInt(numberIndex, 10),\n            delta: delta[numberIndex],\n          });\n        }\n      }\n    }\n  }\n\n  // remove items, in reverse order to avoid sawing our own floor\n  toRemove = toRemove.sort(compare.numerically);\n  for (index = toRemove.length - 1; index >= 0; index--) {\n    index1 = toRemove[index];\n    const indexDiff = delta[`_${index1}`];\n    const removedValue = array.splice(index1, 1)[0];\n    if (indexDiff[2] === ARRAY_MOVE) {\n      // reinsert later\n      toInsert.push({\n        index: indexDiff[1],\n        value: removedValue,\n      });\n    }\n  }\n\n  // insert items, in reverse order to avoid moving our own floor\n  toInsert = toInsert.sort(compare.numericallyBy('index'));\n  const toInsertLength = toInsert.length;\n  for (index = 0; index < toInsertLength; index++) {\n    const insertion = toInsert[index];\n    array.splice(insertion.index, 0, insertion.value);\n  }\n\n  // apply modifications\n  const toModifyLength = toModify.length;\n  let child;\n  if (toModifyLength > 0) {\n    for (index = 0; index < toModifyLength; index++) {\n      const modification = toModify[index];\n      child = new PatchContext(array[modification.index], modification.delta);\n      context.push(child, modification.index);\n    }\n  }\n\n  if (!context.children) {\n    context.setResult(array).exit();\n    return;\n  }\n  context.exit();\n};\npatchFilter.filterName = 'arrays';\n\nexport const collectChildrenPatchFilter: Filter<PatchContext> =\n  function collectChildrenPatchFilter(context) {\n    if (!context || !context.children) {\n      return;\n    }\n    const deltaWithChildren = context.delta as ObjectDelta | ArrayDelta;\n    if (deltaWithChildren._t !== 'a') {\n      return;\n    }\n    const array = context.left as unknown[];\n    const length = context.children.length;\n    let child;\n    for (let index = 0; index < length; index++) {\n      child = context.children[index];\n      const arrayIndex = child.childName as number;\n      array[arrayIndex] = child.result;\n    }\n    context.setResult(array).exit();\n  };\ncollectChildrenPatchFilter.filterName = 'arraysCollectChildren';\n\nexport const reverseFilter: Filter<ReverseContext> =\n  function arraysReverseFilter(context) {\n    if (!context.nested) {\n      const nonNestedDelta = context.delta as\n        | AddedDelta\n        | ModifiedDelta\n        | DeletedDelta\n        | MovedDelta\n        | TextDiffDelta;\n      if (nonNestedDelta[2] === ARRAY_MOVE) {\n        const arrayMoveDelta = nonNestedDelta as MovedDelta;\n        context.newName = `_${arrayMoveDelta[1]}`;\n        context\n          .setResult([\n            arrayMoveDelta[0],\n            parseInt((context.childName as `_${number}`).substring(1), 10),\n            ARRAY_MOVE,\n          ])\n          .exit();\n      }\n      return;\n    }\n    const nestedDelta = context.delta as ObjectDelta | ArrayDelta;\n    if (nestedDelta._t !== 'a') {\n      return;\n    }\n    const arrayDelta = nestedDelta as ArrayDelta;\n    let name;\n    let child;\n    for (name in arrayDelta) {\n      if (name === '_t') {\n        continue;\n      }\n      child = new ReverseContext(arrayDelta[name as `${number}`]);\n      context.push(child, name);\n    }\n    context.exit();\n  };\nreverseFilter.filterName = 'arrays';\n\nconst reverseArrayDeltaIndex = (\n  delta: ArrayDelta,\n  index: string | number,\n  itemDelta: Delta,\n) => {\n  if (typeof index === 'string' && index[0] === '_') {\n    return parseInt(index.substring(1), 10);\n  } else if (Array.isArray(itemDelta) && itemDelta[2] === 0) {\n    return `_${index as number}` as const;\n  }\n\n  let reverseIndex = +index;\n  for (const deltaIndex in delta) {\n    const deltaItem = delta[deltaIndex as `${number}` | `_${number}`];\n    if (Array.isArray(deltaItem)) {\n      if (deltaItem[2] === ARRAY_MOVE) {\n        const moveFromIndex = parseInt(deltaIndex.substring(1), 10);\n        const moveToIndex = (deltaItem as MovedDelta)[1];\n        if (moveToIndex === +index) {\n          return moveFromIndex;\n        }\n        if (moveFromIndex <= reverseIndex && moveToIndex > reverseIndex) {\n          reverseIndex++;\n        } else if (\n          moveFromIndex >= reverseIndex &&\n          moveToIndex < reverseIndex\n        ) {\n          reverseIndex--;\n        }\n      } else if (deltaItem[2] === 0) {\n        const deleteIndex = parseInt(deltaIndex.substring(1), 10);\n        if (deleteIndex <= reverseIndex) {\n          reverseIndex++;\n        }\n      } else if (\n        deltaItem.length === 1 &&\n        parseInt(deltaIndex, 10) <= reverseIndex\n      ) {\n        reverseIndex--;\n      }\n    }\n  }\n\n  return reverseIndex;\n};\n\nexport const collectChildrenReverseFilter: Filter<ReverseContext> = (\n  context,\n) => {\n  if (!context || !context.children) {\n    return;\n  }\n  const deltaWithChildren = context.delta as ObjectDelta | ArrayDelta;\n  if (deltaWithChildren._t !== 'a') {\n    return;\n  }\n  const arrayDelta = deltaWithChildren as ArrayDelta;\n  const length = context.children.length;\n  let child;\n  const delta: ArrayDelta = {\n    _t: 'a',\n  };\n\n  for (let index = 0; index < length; index++) {\n    child = context.children[index];\n    let name: `_${number}` | number = child.newName!;\n    if (typeof name === 'undefined') {\n      name = reverseArrayDeltaIndex(arrayDelta, child.childName!, child.result);\n    }\n    if (delta[name] !== child.result) {\n      // There's no way to type this well.\n      delta[name as number] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n};\ncollectChildrenReverseFilter.filterName = 'arraysCollectChildren';\n","import type { Filter } from '../types';\nimport type DiffContext from '../contexts/diff';\n\nexport const diffFilter: Filter<DiffContext> = function datesDiffFilter(\n  context,\n) {\n  if (context.left instanceof Date) {\n    if (context.right instanceof Date) {\n      if (context.left.getTime() !== context.right.getTime()) {\n        context.setResult([context.left, context.right]);\n      } else {\n        context.setResult(undefined);\n      }\n    } else {\n      context.setResult([context.left, context.right]);\n    }\n    context.exit();\n  } else if (context.right instanceof Date) {\n    context.setResult([context.left, context.right]).exit();\n  }\n};\ndiffFilter.filterName = 'dates';\n","import * as dmp from 'diff-match-patch';\nimport type DiffContext from '../contexts/diff';\nimport type PatchContext from '../contexts/patch';\nimport type ReverseContext from '../contexts/reverse';\nimport type {\n  AddedDelta,\n  DeletedDelta,\n  Filter,\n  ModifiedDelta,\n  MovedDelta,\n  TextDiffDelta,\n} from '../types';\n\ndeclare global {\n  const diff_match_patch: typeof dmp | undefined;\n}\n\ninterface DiffPatch {\n  diff: (txt1: string, txt2: string) => string;\n  patch: (txt1: string, string: string) => string;\n}\n\nconst TEXT_DIFF = 2;\nconst DEFAULT_MIN_LENGTH = 60;\nlet cachedDiffPatch: DiffPatch | null = null;\n\nfunction getDiffMatchPatch(required: true): DiffPatch;\nfunction getDiffMatchPatch(required?: boolean): DiffPatch;\nfunction getDiffMatchPatch(required?: boolean) {\n  if (!cachedDiffPatch) {\n    let instance: dmp | null | undefined;\n    if (typeof diff_match_patch !== 'undefined') {\n      // already loaded, probably a browser\n      instance =\n        typeof diff_match_patch === 'function'\n          ? new diff_match_patch()\n          : new (diff_match_patch as typeof dmp).diff_match_patch();\n    } else if (dmp) {\n      try {\n        instance = dmp && new dmp();\n      } catch (err) {\n        instance = null;\n      }\n    }\n    if (!instance) {\n      if (!required) {\n        return null;\n      }\n      const error: Error & { diff_match_patch_not_found?: boolean } = new Error(\n        'text diff_match_patch library not found',\n      );\n      // eslint-disable-next-line camelcase\n      error.diff_match_patch_not_found = true;\n      throw error;\n    }\n    cachedDiffPatch = {\n      diff: function (txt1, txt2) {\n        return instance!.patch_toText(instance!.patch_make(txt1, txt2));\n      },\n      patch: function (txt1, patch) {\n        const results = instance!.patch_apply(\n          instance!.patch_fromText(patch),\n          txt1,\n        );\n        for (let i = 0; i < results[1].length; i++) {\n          if (!results[1][i]) {\n            const error: Error & { textPatchFailed?: boolean } = new Error(\n              'text patch failed',\n            );\n            error.textPatchFailed = true;\n          }\n        }\n        return results[0];\n      },\n    };\n  }\n  return cachedDiffPatch;\n}\n\nexport const diffFilter: Filter<DiffContext> = function textsDiffFilter(\n  context,\n) {\n  if (context.leftType !== 'string') {\n    return;\n  }\n  const left = context.left as string;\n  const right = context.right as string;\n  const minLength =\n    (context.options &&\n      context.options.textDiff &&\n      context.options.textDiff.minLength) ||\n    DEFAULT_MIN_LENGTH;\n  if (left.length < minLength || right.length < minLength) {\n    context.setResult([left, right]).exit();\n    return;\n  }\n  // large text, try to use a text-diff algorithm\n  const diffMatchPatch = getDiffMatchPatch();\n  if (!diffMatchPatch) {\n    // diff-match-patch library not available,\n    // fallback to regular string replace\n    context.setResult([left, right]).exit();\n    return;\n  }\n  const diff = diffMatchPatch.diff;\n  context.setResult([diff(left, right), 0, TEXT_DIFF]).exit();\n};\ndiffFilter.filterName = 'texts';\n\nexport const patchFilter: Filter<PatchContext> = function textsPatchFilter(\n  context,\n) {\n  if (context.nested) {\n    return;\n  }\n  const nonNestedDelta = context.delta as\n    | AddedDelta\n    | ModifiedDelta\n    | DeletedDelta\n    | MovedDelta\n    | TextDiffDelta;\n  if (nonNestedDelta[2] !== TEXT_DIFF) {\n    return;\n  }\n  const textDiffDelta = nonNestedDelta as TextDiffDelta;\n\n  // text-diff, use a text-patch algorithm\n  const patch = getDiffMatchPatch(true).patch;\n  context.setResult(patch(context.left as string, textDiffDelta[0])).exit();\n};\npatchFilter.filterName = 'texts';\n\nconst textDeltaReverse = function (delta: string) {\n  let i;\n  let l;\n  let line;\n  let lineTmp;\n  let header = null;\n  const headerRegex = /^@@ +-(\\d+),(\\d+) +\\+(\\d+),(\\d+) +@@$/;\n  let lineHeader;\n  const lines = delta.split('\\n');\n  for (i = 0, l = lines.length; i < l; i++) {\n    line = lines[i];\n    const lineStart = line.slice(0, 1);\n    if (lineStart === '@') {\n      header = headerRegex.exec(line)!;\n      lineHeader = i;\n\n      // fix header\n      lines[lineHeader] =\n        '@@ -' +\n        header[3] +\n        ',' +\n        header[4] +\n        ' +' +\n        header[1] +\n        ',' +\n        header[2] +\n        ' @@';\n    } else if (lineStart === '+') {\n      lines[i] = '-' + lines[i].slice(1);\n      if (lines[i - 1].slice(0, 1) === '+') {\n        // swap lines to keep default order (-+)\n        lineTmp = lines[i];\n        lines[i] = lines[i - 1];\n        lines[i - 1] = lineTmp;\n      }\n    } else if (lineStart === '-') {\n      lines[i] = '+' + lines[i].slice(1);\n    }\n  }\n  return lines.join('\\n');\n};\n\nexport const reverseFilter: Filter<ReverseContext> =\n  function textsReverseFilter(context) {\n    if (context.nested) {\n      return;\n    }\n    const nonNestedDelta = context.delta as\n      | AddedDelta\n      | ModifiedDelta\n      | DeletedDelta\n      | MovedDelta\n      | TextDiffDelta;\n    if (nonNestedDelta[2] !== TEXT_DIFF) {\n      return;\n    }\n    const textDiffDelta = nonNestedDelta as TextDiffDelta;\n\n    // text-diff, use a text-diff algorithm\n    context\n      .setResult([textDeltaReverse(textDiffDelta[0]), 0, TEXT_DIFF])\n      .exit();\n  };\nreverseFilter.filterName = 'texts';\n","import Processor from './processor';\nimport Pipe from './pipe';\nimport DiffContext from './contexts/diff';\nimport PatchContext from './contexts/patch';\nimport ReverseContext from './contexts/reverse';\nimport clone from './clone';\n\nimport * as trivial from './filters/trivial';\nimport * as nested from './filters/nested';\nimport * as arrays from './filters/arrays';\nimport * as dates from './filters/dates';\nimport * as texts from './filters/texts';\nimport type { Delta, Options } from './types';\n\nclass DiffPatcher {\n  processor: Processor;\n\n  constructor(options?: Options) {\n    this.processor = new Processor(options);\n    this.processor.pipe(\n      new Pipe<DiffContext>('diff')\n        .append(\n          nested.collectChildrenDiffFilter,\n          trivial.diffFilter,\n          dates.diffFilter,\n          texts.diffFilter,\n          nested.objectsDiffFilter,\n          arrays.diffFilter,\n        )\n        .shouldHaveResult()!,\n    );\n    this.processor.pipe(\n      new Pipe<PatchContext>('patch')\n        .append(\n          nested.collectChildrenPatchFilter,\n          arrays.collectChildrenPatchFilter,\n          trivial.patchFilter,\n          texts.patchFilter,\n          nested.patchFilter,\n          arrays.patchFilter,\n        )\n        .shouldHaveResult()!,\n    );\n    this.processor.pipe(\n      new Pipe<ReverseContext>('reverse')\n        .append(\n          nested.collectChildrenReverseFilter,\n          arrays.collectChildrenReverseFilter,\n          trivial.reverseFilter,\n          texts.reverseFilter,\n          nested.reverseFilter,\n          arrays.reverseFilter,\n        )\n        .shouldHaveResult()!,\n    );\n  }\n\n  options(options: Options) {\n    return this.processor.options(options);\n  }\n\n  diff(left: unknown, right: unknown) {\n    return this.processor.process(new DiffContext(left, right));\n  }\n\n  patch(left: unknown, delta: Delta) {\n    return this.processor.process(new PatchContext(left, delta));\n  }\n\n  reverse(delta: Delta) {\n    return this.processor.process(new ReverseContext(delta));\n  }\n\n  unpatch(right: unknown, delta: Delta) {\n    return this.patch(right, this.reverse(delta));\n  }\n\n  clone(value: unknown) {\n    return clone(value);\n  }\n}\n\nexport default DiffPatcher;\n","// use as 2nd parameter for JSON.parse to revive Date instances\nexport default function dateReviver(key: string, value: unknown) {\n  let parts;\n  if (typeof value === 'string') {\n    parts =\n      /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d*))?(Z|([+-])(\\d{2}):(\\d{2}))$/.exec(\n        value,\n      );\n    if (parts) {\n      return new Date(\n        Date.UTC(\n          +parts[1],\n          +parts[2] - 1,\n          +parts[3],\n          +parts[4],\n          +parts[5],\n          +parts[6],\n          +(parts[7] || 0),\n        ),\n      );\n    }\n  }\n  return value;\n}\n","import type {\n  AddedDelta,\n  ArrayDelta,\n  DeletedDelta,\n  Delta,\n  ModifiedDelta,\n  MovedDelta,\n  ObjectDelta,\n  TextDiffDelta,\n} from '../types';\n\nconst trimUnderscore = (str: string) => {\n  if (str.substring(0, 1) === '_') {\n    return str.slice(1);\n  }\n  return str;\n};\n\nconst arrayKeyToSortNumber = (key: string) => {\n  if (key === '_t') {\n    return -1;\n  } else {\n    if (key.substring(0, 1) === '_') {\n      return parseInt(key.slice(1), 10);\n    } else {\n      return parseInt(key, 10) + 0.1;\n    }\n  }\n};\n\nconst arrayKeyComparer = (key1: string, key2: string) =>\n  arrayKeyToSortNumber(key1) - arrayKeyToSortNumber(key2);\n\nexport interface BaseFormatterContext {\n  buffer: string[];\n  out: (...args: string[]) => void;\n}\n\nexport type DeltaType =\n  | 'movedestination'\n  | 'unchanged'\n  | 'added'\n  | 'modified'\n  | 'deleted'\n  | 'textdiff'\n  | 'moved'\n  | 'node'\n  | 'unknown';\n\nexport type NodeType = 'array' | 'object' | '';\n\ninterface DeltaTypeMap {\n  movedestination: undefined;\n  unchanged: undefined;\n  added: AddedDelta;\n  modified: ModifiedDelta;\n  deleted: DeletedDelta;\n  textdiff: TextDiffDelta;\n  moved: MovedDelta;\n  node: ObjectDelta | ArrayDelta;\n}\n\ninterface MoveDestination {\n  key: `_${number}`;\n  value: unknown;\n}\n\ntype Formatter<TContext extends BaseFormatterContext> = {\n  [TDeltaType in keyof DeltaTypeMap as `format_${keyof DeltaTypeMap}`]: (\n    context: TContext,\n    delta: DeltaTypeMap[TDeltaType],\n    leftValue: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n    movedFrom: MoveDestination | undefined,\n  ) => void;\n};\n\ninterface LineOutputPiece {\n  type: 'context' | 'added' | 'deleted';\n  text: string;\n}\n\ninterface LineOutputLocation {\n  line: string;\n  chr: string;\n}\n\ninterface LineOutput {\n  pieces: LineOutputPiece[];\n  location: LineOutputLocation;\n}\n\nabstract class BaseFormatter<\n  TContext extends BaseFormatterContext,\n  TFormatted = string | undefined,\n> {\n  includeMoveDestinations?: boolean;\n\n  format(delta: Delta, left?: unknown): TFormatted {\n    const context: Partial<TContext> = {};\n    this.prepareContext(context);\n    const preparedContext = context as TContext;\n    this.recurse(preparedContext, delta, left);\n    return this.finalize(preparedContext) as TFormatted;\n  }\n\n  prepareContext(context: Partial<TContext>) {\n    context.buffer = [];\n    context.out = function (...args) {\n      this.buffer!.push(...args);\n    };\n  }\n\n  typeFormattterNotFound(context: TContext, deltaType: 'unknown'): never {\n    throw new Error(`cannot format delta type: ${deltaType}`);\n  }\n\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  typeFormattterErrorFormatter(\n    context: TContext,\n    err: unknown,\n    delta: Delta,\n    leftValue: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n    movedFrom: MoveDestination | undefined,\n  ) {}\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  finalize({ buffer }: TContext) {\n    if (Array.isArray(buffer)) {\n      return buffer.join('');\n    }\n  }\n\n  recurse<TDeltaType extends keyof DeltaTypeMap>(\n    context: TContext,\n    delta: DeltaTypeMap[TDeltaType],\n    left: unknown,\n    key?: string,\n    leftKey?: string | number,\n    movedFrom?: MoveDestination | undefined,\n    isLast?: boolean,\n  ) {\n    const useMoveOriginHere = delta && movedFrom;\n    const leftValue = useMoveOriginHere ? movedFrom.value : left;\n\n    if (typeof delta === 'undefined' && typeof key === 'undefined') {\n      return undefined;\n    }\n\n    const type = this.getDeltaType(delta, movedFrom);\n    const nodeType =\n      type === 'node'\n        ? (delta as ArrayDelta)._t === 'a'\n          ? 'array'\n          : 'object'\n        : '';\n\n    if (typeof key !== 'undefined') {\n      this.nodeBegin(context, key, leftKey!, type, nodeType, isLast!);\n    } else {\n      this.rootBegin(context, type, nodeType);\n    }\n\n    let typeFormattter:\n      | ((\n          context: TContext,\n          delta: DeltaTypeMap[TDeltaType],\n          leftValue: unknown,\n          key: string | undefined,\n          leftKey: string | number | undefined,\n          movedFrom: MoveDestination | undefined,\n        ) => void)\n      | undefined;\n    try {\n      typeFormattter =\n        type !== 'unknown'\n          ? (this as Formatter<TContext>)[`format_${type}`]\n          : this.typeFormattterNotFound(context, type);\n      typeFormattter.call(\n        this,\n        context,\n        delta,\n        leftValue,\n        key,\n        leftKey,\n        movedFrom,\n      );\n    } catch (err) {\n      this.typeFormattterErrorFormatter(\n        context,\n        err,\n        delta,\n        leftValue,\n        key,\n        leftKey,\n        movedFrom,\n      );\n      if (typeof console !== 'undefined' && console.error) {\n        console.error((err as Error).stack);\n      }\n    }\n\n    if (typeof key !== 'undefined') {\n      this.nodeEnd(context, key, leftKey!, type, nodeType, isLast!);\n    } else {\n      this.rootEnd(context, type, nodeType);\n    }\n  }\n\n  formatDeltaChildren(\n    context: TContext,\n    delta: ObjectDelta | ArrayDelta,\n    left: unknown,\n  ) {\n    this.forEachDeltaKey(delta, left, (key, leftKey, movedFrom, isLast) => {\n      this.recurse(\n        context,\n        (delta as Record<string, Delta>)[key],\n        left ? (left as Record<string | number, unknown>)[leftKey] : undefined,\n        key,\n        leftKey,\n        movedFrom,\n        isLast,\n      );\n    });\n  }\n\n  forEachDeltaKey(\n    delta: ObjectDelta | ArrayDelta,\n    left: unknown,\n    fn: (\n      key: string,\n      leftKey: string | number,\n      moveDestination: MoveDestination | undefined,\n      isLast: boolean,\n    ) => void,\n  ) {\n    const keys = Object.keys(delta);\n    const arrayKeys = delta._t === 'a';\n    const moveDestinations: {\n      [index: string | number]: MoveDestination | undefined;\n    } = {};\n    let name;\n    if (typeof left !== 'undefined') {\n      for (name in left) {\n        if (Object.prototype.hasOwnProperty.call(left, name)) {\n          if (\n            typeof (delta as Record<string, Delta>)[name] === 'undefined' &&\n            (!arrayKeys ||\n              typeof (delta as ArrayDelta)[`_${name}` as `_${number}`] ===\n                'undefined')\n          ) {\n            keys.push(name);\n          }\n        }\n      }\n    }\n    // look for move destinations\n    for (name in delta) {\n      if (Object.prototype.hasOwnProperty.call(delta, name)) {\n        const value = (delta as Record<string, Delta>)[name];\n        if (Array.isArray(value) && value[2] === 3) {\n          const movedDelta = value as MovedDelta;\n          moveDestinations[`${movedDelta[1]}`] = {\n            key: name as `_${number}`,\n            value: left && (left as unknown[])[parseInt(name.substring(1), 10)],\n          };\n          if (this.includeMoveDestinations !== false) {\n            if (\n              typeof left === 'undefined' &&\n              typeof (delta as ArrayDelta)[movedDelta[1]] === 'undefined'\n            ) {\n              keys.push(movedDelta[1].toString());\n            }\n          }\n        }\n      }\n    }\n    if (arrayKeys) {\n      keys.sort(arrayKeyComparer);\n    } else {\n      keys.sort();\n    }\n    for (let index = 0, length = keys.length; index < length; index++) {\n      const key = keys[index];\n      if (arrayKeys && key === '_t') {\n        continue;\n      }\n      const leftKey = arrayKeys ? parseInt(trimUnderscore(key), 10) : key;\n      const isLast = index === length - 1;\n      fn(key, leftKey, moveDestinations[leftKey], isLast);\n    }\n  }\n\n  getDeltaType(delta: Delta, movedFrom?: MoveDestination | undefined) {\n    if (typeof delta === 'undefined') {\n      if (typeof movedFrom !== 'undefined') {\n        return 'movedestination';\n      }\n      return 'unchanged';\n    }\n    if (Array.isArray(delta)) {\n      if (delta.length === 1) {\n        return 'added';\n      }\n      if (delta.length === 2) {\n        return 'modified';\n      }\n      if (delta.length === 3 && delta[2] === 0) {\n        return 'deleted';\n      }\n      if (delta.length === 3 && delta[2] === 2) {\n        return 'textdiff';\n      }\n      if (delta.length === 3 && delta[2] === 3) {\n        return 'moved';\n      }\n    } else if (typeof delta === 'object') {\n      return 'node';\n    }\n    return 'unknown';\n  }\n\n  parseTextDiff(value: string) {\n    const output = [];\n    const lines = value.split('\\n@@ ');\n    for (let i = 0, l = lines.length; i < l; i++) {\n      const line = lines[i];\n      const lineOutput: {\n        pieces: LineOutputPiece[];\n        location?: LineOutputLocation;\n      } = {\n        pieces: [],\n      };\n      const location = /^(?:@@ )?[-+]?(\\d+),(\\d+)/.exec(line)!.slice(1);\n      lineOutput.location = {\n        line: location[0],\n        chr: location[1],\n      };\n      const pieces = line.split('\\n').slice(1);\n      for (\n        let pieceIndex = 0, piecesLength = pieces.length;\n        pieceIndex < piecesLength;\n        pieceIndex++\n      ) {\n        const piece = pieces[pieceIndex];\n        if (!piece.length) {\n          continue;\n        }\n        const pieceOutput: Partial<LineOutputPiece> = {\n          type: 'context',\n        };\n        if (piece.substring(0, 1) === '+') {\n          pieceOutput.type = 'added';\n        } else if (piece.substring(0, 1) === '-') {\n          pieceOutput.type = 'deleted';\n        }\n        pieceOutput.text = piece.slice(1);\n        lineOutput.pieces.push(pieceOutput as LineOutputPiece);\n      }\n      output.push(lineOutput as LineOutput);\n    }\n    return output;\n  }\n\n  abstract rootBegin(\n    context: TContext,\n    type: DeltaType,\n    nodeType: NodeType,\n  ): void;\n\n  abstract rootEnd(\n    context: TContext,\n    type: DeltaType,\n    nodeType: NodeType,\n  ): void;\n\n  abstract nodeBegin(\n    context: TContext,\n    key: string,\n    leftKey: string | number,\n    type: DeltaType,\n    nodeType: NodeType,\n    isLast: boolean,\n  ): void;\n\n  abstract nodeEnd(\n    context: TContext,\n    key: string,\n    leftKey: string | number,\n    type: DeltaType,\n    nodeType: NodeType,\n    isLast: boolean,\n  ): void;\n\n  abstract format_unchanged(\n    context: TContext,\n    delta: undefined,\n    leftValue: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n    movedFrom: MoveDestination | undefined,\n  ): void;\n\n  abstract format_movedestination(\n    context: TContext,\n    delta: undefined,\n    leftValue: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n    movedFrom: MoveDestination | undefined,\n  ): void;\n\n  abstract format_node(\n    context: TContext,\n    delta: ObjectDelta | ArrayDelta,\n    leftValue: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n    movedFrom: MoveDestination | undefined,\n  ): void;\n\n  abstract format_added(\n    context: TContext,\n    delta: AddedDelta,\n    leftValue: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n    movedFrom: MoveDestination | undefined,\n  ): void;\n\n  abstract format_modified(\n    context: TContext,\n    delta: ModifiedDelta,\n    leftValue: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n    movedFrom: MoveDestination | undefined,\n  ): void;\n\n  abstract format_deleted(\n    context: TContext,\n    delta: DeletedDelta,\n    leftValue: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n    movedFrom: MoveDestination | undefined,\n  ): void;\n\n  abstract format_moved(\n    context: TContext,\n    delta: MovedDelta,\n    leftValue: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n    movedFrom: MoveDestination | undefined,\n  ): void;\n\n  abstract format_textdiff(\n    context: TContext,\n    delta: TextDiffDelta,\n    leftValue: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n    movedFrom: MoveDestination | undefined,\n  ): void;\n}\n\nexport default BaseFormatter;\n","import BaseFormatter from './base';\nimport type { BaseFormatterContext, DeltaType, NodeType } from './base';\nimport type {\n  AddedDelta,\n  ArrayDelta,\n  DeletedDelta,\n  Delta,\n  ModifiedDelta,\n  MovedDelta,\n  ObjectDelta,\n  TextDiffDelta,\n} from '../types';\n\ninterface HtmlFormatterContext extends BaseFormatterContext {\n  hasArrows?: boolean;\n}\n\nclass HtmlFormatter extends BaseFormatter<HtmlFormatterContext> {\n  typeFormattterErrorFormatter(context: HtmlFormatterContext, err: unknown) {\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    context.out(`<pre class=\"jsondiffpatch-error\">${err}</pre>`);\n  }\n\n  formatValue(context: HtmlFormatterContext, value: unknown) {\n    context.out(`<pre>${htmlEscape(JSON.stringify(value, null, 2))}</pre>`);\n  }\n\n  formatTextDiffString(context: HtmlFormatterContext, value: string) {\n    const lines = this.parseTextDiff(value);\n    context.out('<ul class=\"jsondiffpatch-textdiff\">');\n    for (let i = 0, l = lines.length; i < l; i++) {\n      const line = lines[i];\n      context.out(\n        '<li><div class=\"jsondiffpatch-textdiff-location\">' +\n          `<span class=\"jsondiffpatch-textdiff-line-number\">${line.location.line}</span><span class=\"jsondiffpatch-textdiff-char\">${line.location.chr}</span></div><div class=\"jsondiffpatch-textdiff-line\">`,\n      );\n      const pieces = line.pieces;\n      for (\n        let pieceIndex = 0, piecesLength = pieces.length;\n        pieceIndex < piecesLength;\n        pieceIndex++\n      ) {\n        const piece = pieces[pieceIndex];\n        context.out(\n          `<span class=\"jsondiffpatch-textdiff-${piece.type}\">${htmlEscape(\n            decodeURI(piece.text),\n          )}</span>`,\n        );\n      }\n      context.out('</div></li>');\n    }\n    context.out('</ul>');\n  }\n\n  rootBegin(\n    context: HtmlFormatterContext,\n    type: DeltaType,\n    nodeType: NodeType,\n  ) {\n    const nodeClass = `jsondiffpatch-${type}${\n      nodeType ? ` jsondiffpatch-child-node-type-${nodeType}` : ''\n    }`;\n    context.out(`<div class=\"jsondiffpatch-delta ${nodeClass}\">`);\n  }\n\n  rootEnd(context: HtmlFormatterContext) {\n    context.out(\n      `</div>${\n        context.hasArrows\n          ? '<script type=\"text/javascript\">setTimeout(' +\n            `${adjustArrows.toString()},10);</script>`\n          : ''\n      }`,\n    );\n  }\n\n  nodeBegin(\n    context: HtmlFormatterContext,\n    key: string,\n    leftKey: string | number,\n    type: DeltaType,\n    nodeType: NodeType,\n  ) {\n    const nodeClass = `jsondiffpatch-${type}${\n      nodeType ? ` jsondiffpatch-child-node-type-${nodeType}` : ''\n    }`;\n    context.out(\n      `<li class=\"${nodeClass}\" data-key=\"${leftKey}\">` +\n        `<div class=\"jsondiffpatch-property-name\">${leftKey}</div>`,\n    );\n  }\n\n  nodeEnd(context: HtmlFormatterContext) {\n    context.out('</li>');\n  }\n\n  format_unchanged(\n    context: HtmlFormatterContext,\n    delta: undefined,\n    left: unknown,\n  ) {\n    if (typeof left === 'undefined') {\n      return;\n    }\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatValue(context, left);\n    context.out('</div>');\n  }\n\n  format_movedestination(\n    context: HtmlFormatterContext,\n    delta: undefined,\n    left: unknown,\n  ) {\n    if (typeof left === 'undefined') {\n      return;\n    }\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatValue(context, left);\n    context.out('</div>');\n  }\n\n  format_node(\n    context: HtmlFormatterContext,\n    delta: ObjectDelta | ArrayDelta,\n    left: unknown,\n  ) {\n    // recurse\n    const nodeType = delta._t === 'a' ? 'array' : 'object';\n    context.out(\n      `<ul class=\"jsondiffpatch-node jsondiffpatch-node-type-${nodeType}\">`,\n    );\n    this.formatDeltaChildren(context, delta, left);\n    context.out('</ul>');\n  }\n\n  format_added(context: HtmlFormatterContext, delta: AddedDelta) {\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatValue(context, delta[0]);\n    context.out('</div>');\n  }\n\n  format_modified(context: HtmlFormatterContext, delta: ModifiedDelta) {\n    context.out('<div class=\"jsondiffpatch-value jsondiffpatch-left-value\">');\n    this.formatValue(context, delta[0]);\n    context.out(\n      '</div>' + '<div class=\"jsondiffpatch-value jsondiffpatch-right-value\">',\n    );\n    this.formatValue(context, delta[1]);\n    context.out('</div>');\n  }\n\n  format_deleted(context: HtmlFormatterContext, delta: DeletedDelta) {\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatValue(context, delta[0]);\n    context.out('</div>');\n  }\n\n  format_moved(context: HtmlFormatterContext, delta: MovedDelta) {\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatValue(context, delta[0]);\n    context.out(\n      `</div><div class=\"jsondiffpatch-moved-destination\">${delta[1]}</div>`,\n    );\n\n    // draw an SVG arrow from here to move destination\n    context.out(\n      /* jshint multistr: true */\n      '<div class=\"jsondiffpatch-arrow\" ' +\n        `style=\"position: relative; left: -34px;\">\n          <svg width=\"30\" height=\"60\" ` +\n        `style=\"position: absolute; display: none;\">\n          <defs>\n              <marker id=\"markerArrow\" markerWidth=\"8\" markerHeight=\"8\"\n                 refx=\"2\" refy=\"4\"\n                     orient=\"auto\" markerUnits=\"userSpaceOnUse\">\n                  <path d=\"M1,1 L1,7 L7,4 L1,1\" style=\"fill: #339;\" />\n              </marker>\n          </defs>\n          <path d=\"M30,0 Q-10,25 26,50\"\n            style=\"stroke: #88f; stroke-width: 2px; fill: none; ` +\n        `stroke-opacity: 0.5; marker-end: url(#markerArrow);\"\n          ></path>\n          </svg>\n      </div>`,\n    );\n    context.hasArrows = true;\n  }\n\n  format_textdiff(context: HtmlFormatterContext, delta: TextDiffDelta) {\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatTextDiffString(context, delta[0]);\n    context.out('</div>');\n  }\n}\n\nfunction htmlEscape(text: string) {\n  let html = text;\n  const replacements: [RegExp, string][] = [\n    [/&/g, '&amp;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n    [/'/g, '&apos;'],\n    [/\"/g, '&quot;'],\n  ];\n  for (let i = 0; i < replacements.length; i++) {\n    html = html.replace(replacements[i][0], replacements[i][1]);\n  }\n  return html;\n}\n\nconst adjustArrows = function jsondiffpatchHtmlFormatterAdjustArrows(\n  nodeArg?: Element,\n) {\n  const node = nodeArg || document;\n  const getElementText = ({ textContent, innerText }: HTMLDivElement) =>\n    textContent || innerText;\n  const eachByQuery = (\n    el: Element | Document,\n    query: string,\n    fn: (element: HTMLElement) => void,\n  ) => {\n    const elems = el.querySelectorAll(query);\n    for (let i = 0, l = elems.length; i < l; i++) {\n      fn(elems[i] as HTMLElement);\n    }\n  };\n  const eachChildren = (\n    { children }: ParentNode,\n    fn: (child: Element, index: number) => void,\n  ) => {\n    for (let i = 0, l = children.length; i < l; i++) {\n      fn(children[i], i);\n    }\n  };\n  eachByQuery(\n    node,\n    '.jsondiffpatch-arrow',\n    ({ parentNode, children, style }) => {\n      const arrowParent = parentNode as HTMLElement;\n      const svg = children[0] as SVGSVGElement;\n      const path = svg.children[1] as SVGPathElement;\n      svg.style.display = 'none';\n      const destination = getElementText(\n        arrowParent.querySelector('.jsondiffpatch-moved-destination')!,\n      );\n      const container = arrowParent.parentNode!;\n      let destinationElem: HTMLElement | undefined;\n      eachChildren(container, (child) => {\n        if (child.getAttribute('data-key') === destination) {\n          destinationElem = child as HTMLElement;\n        }\n      });\n      if (!destinationElem) {\n        return;\n      }\n      try {\n        const distance = destinationElem.offsetTop - arrowParent.offsetTop;\n        svg.setAttribute('height', `${Math.abs(distance) + 6}`);\n        style.top = `${-8 + (distance > 0 ? 0 : distance)}px`;\n        const curve =\n          distance > 0\n            ? `M30,0 Q-10,${Math.round(distance / 2)} 26,${distance - 4}`\n            : `M30,${-distance} Q-10,${Math.round(-distance / 2)} 26,4`;\n        path.setAttribute('d', curve);\n        svg.style.display = '';\n      } catch (err) {\n        // continue regardless of error\n      }\n    },\n  );\n};\n\nexport const showUnchanged = (\n  show?: boolean,\n  node?: Element,\n  delay?: number,\n) => {\n  const el = node || document.body;\n  const prefix = 'jsondiffpatch-unchanged-';\n  const classes = {\n    showing: `${prefix}showing`,\n    hiding: `${prefix}hiding`,\n    visible: `${prefix}visible`,\n    hidden: `${prefix}hidden`,\n  };\n  const list = el.classList;\n  if (!list) {\n    return;\n  }\n  if (!delay) {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    list.remove(classes.visible);\n    list.remove(classes.hidden);\n    if (show === false) {\n      list.add(classes.hidden);\n    }\n    return;\n  }\n  if (show === false) {\n    list.remove(classes.showing);\n    list.add(classes.visible);\n    setTimeout(() => {\n      list.add(classes.hiding);\n    }, 10);\n  } else {\n    list.remove(classes.hiding);\n    list.add(classes.showing);\n    list.remove(classes.hidden);\n  }\n  const intervalId = setInterval(() => {\n    adjustArrows(el);\n  }, 100);\n  setTimeout(() => {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    if (show === false) {\n      list.add(classes.hidden);\n      list.remove(classes.visible);\n    } else {\n      list.add(classes.visible);\n      list.remove(classes.hidden);\n    }\n    setTimeout(() => {\n      list.remove(classes.visible);\n      clearInterval(intervalId);\n    }, delay + 400);\n  }, delay);\n};\n\nexport const hideUnchanged = (node?: Element, delay?: number) =>\n  showUnchanged(false, node, delay);\n\nexport default HtmlFormatter;\n\nlet defaultInstance: HtmlFormatter | undefined;\n\nexport function format(delta: Delta, left?: unknown) {\n  if (!defaultInstance) {\n    defaultInstance = new HtmlFormatter();\n  }\n  return defaultInstance.format(delta, left);\n}\n","import BaseFormatter from './base';\nimport type { BaseFormatterContext, DeltaType, NodeType } from './base';\nimport type {\n  AddedDelta,\n  ArrayDelta,\n  DeletedDelta,\n  Delta,\n  ModifiedDelta,\n  MovedDelta,\n  ObjectDelta,\n  TextDiffDelta,\n} from '../types';\n\ninterface AnnotatedFormatterContext extends BaseFormatterContext {\n  indentLevel?: number;\n  indentPad?: string;\n  indent: (levels?: number) => void;\n  row: (json: string, htmlNote?: string) => void;\n}\n\nclass AnnotatedFormatter extends BaseFormatter<AnnotatedFormatterContext> {\n  constructor() {\n    super();\n    this.includeMoveDestinations = false;\n  }\n\n  prepareContext(context: Partial<AnnotatedFormatterContext>) {\n    super.prepareContext(context);\n    context.indent = function (levels) {\n      this.indentLevel =\n        (this.indentLevel || 0) + (typeof levels === 'undefined' ? 1 : levels);\n      this.indentPad = new Array(this.indentLevel + 1).join('&nbsp;&nbsp;');\n    };\n    context.row = (json, htmlNote) => {\n      context.out!(\n        '<tr><td style=\"white-space: nowrap;\">' +\n          '<pre class=\"jsondiffpatch-annotated-indent\"' +\n          ' style=\"display: inline-block\">',\n      );\n      if (context.indentPad != null) context.out!(context.indentPad);\n      context.out!('</pre><pre style=\"display: inline-block\">');\n      context.out!(json);\n      context.out!('</pre></td><td class=\"jsondiffpatch-delta-note\"><div>');\n      if (htmlNote != null) context.out!(htmlNote);\n      context.out!('</div></td></tr>');\n    };\n  }\n\n  typeFormattterErrorFormatter(\n    context: AnnotatedFormatterContext,\n    err: unknown,\n  ) {\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    context.row('', `<pre class=\"jsondiffpatch-error\">${err}</pre>`);\n  }\n\n  formatTextDiffString(context: AnnotatedFormatterContext, value: string) {\n    const lines = this.parseTextDiff(value);\n    context.out('<ul class=\"jsondiffpatch-textdiff\">');\n    for (let i = 0, l = lines.length; i < l; i++) {\n      const line = lines[i];\n      context.out(\n        '<li><div class=\"jsondiffpatch-textdiff-location\">' +\n          `<span class=\"jsondiffpatch-textdiff-line-number\">${line.location.line}</span><span class=\"jsondiffpatch-textdiff-char\">${line.location.chr}</span></div><div class=\"jsondiffpatch-textdiff-line\">`,\n      );\n      const pieces = line.pieces;\n      for (\n        let pieceIndex = 0, piecesLength = pieces.length;\n        pieceIndex < piecesLength;\n        pieceIndex++\n      ) {\n        const piece = pieces[pieceIndex];\n        context.out(\n          `<span class=\"jsondiffpatch-textdiff-${piece.type}\">${piece.text}</span>`,\n        );\n      }\n      context.out('</div></li>');\n    }\n    context.out('</ul>');\n  }\n\n  rootBegin(\n    context: AnnotatedFormatterContext,\n    type: DeltaType,\n    nodeType: NodeType,\n  ) {\n    context.out('<table class=\"jsondiffpatch-annotated-delta\">');\n    if (type === 'node') {\n      context.row('{');\n      context.indent();\n    }\n    if (nodeType === 'array') {\n      context.row(\n        '\"_t\": \"a\",',\n        'Array delta (member names indicate array indices)',\n      );\n    }\n  }\n\n  rootEnd(context: AnnotatedFormatterContext, type: DeltaType) {\n    if (type === 'node') {\n      context.indent(-1);\n      context.row('}');\n    }\n    context.out('</table>');\n  }\n\n  nodeBegin(\n    context: AnnotatedFormatterContext,\n    key: string,\n    leftKey: string | number,\n    type: DeltaType,\n    nodeType: NodeType,\n  ) {\n    context.row(`&quot;${key}&quot;: {`);\n    if (type === 'node') {\n      context.indent();\n    }\n    if (nodeType === 'array') {\n      context.row(\n        '\"_t\": \"a\",',\n        'Array delta (member names indicate array indices)',\n      );\n    }\n  }\n\n  nodeEnd(\n    context: AnnotatedFormatterContext,\n    key: string,\n    leftKey: string | number,\n    type: DeltaType,\n    nodeType: NodeType,\n    isLast: boolean,\n  ) {\n    if (type === 'node') {\n      context.indent(-1);\n    }\n    context.row(`}${isLast ? '' : ','}`);\n  }\n\n  format_unchanged() {}\n\n  format_movedestination() {}\n\n  format_node(\n    context: AnnotatedFormatterContext,\n    delta: ObjectDelta | ArrayDelta,\n    left: unknown,\n  ) {\n    // recurse\n    this.formatDeltaChildren(context, delta, left);\n  }\n\n  format_added(\n    context: AnnotatedFormatterContext,\n    delta: AddedDelta,\n    left: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n  ) {\n    formatAnyChange.call(this, context, delta, left, key, leftKey);\n  }\n\n  format_modified(\n    context: AnnotatedFormatterContext,\n    delta: ModifiedDelta,\n    left: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n  ) {\n    formatAnyChange.call(this, context, delta, left, key, leftKey);\n  }\n\n  format_deleted(\n    context: AnnotatedFormatterContext,\n    delta: DeletedDelta,\n    left: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n  ) {\n    formatAnyChange.call(this, context, delta, left, key, leftKey);\n  }\n\n  format_moved(\n    context: AnnotatedFormatterContext,\n    delta: MovedDelta,\n    left: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n  ) {\n    formatAnyChange.call(this, context, delta, left, key, leftKey);\n  }\n\n  format_textdiff(\n    context: AnnotatedFormatterContext,\n    delta: TextDiffDelta,\n    left: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n  ) {\n    formatAnyChange.call(this, context, delta, left, key, leftKey);\n  }\n}\n\nconst wrapPropertyName = (name: string | number | undefined) =>\n  `<pre style=\"display:inline-block\">&quot;${name}&quot;</pre>`;\n\ninterface DeltaTypeAnnotationsMap {\n  added: AddedDelta;\n  modified: ModifiedDelta;\n  deleted: DeletedDelta;\n  moved: MovedDelta;\n  textdiff: TextDiffDelta;\n}\n\nconst deltaAnnotations: {\n  [DeltaType in keyof DeltaTypeAnnotationsMap]: (\n    delta: DeltaTypeAnnotationsMap[DeltaType],\n    left: unknown,\n    key: string | undefined,\n    leftKey: string | number | undefined,\n  ) => string;\n} = {\n  added(delta, left, key, leftKey) {\n    const formatLegend = ' <pre>([newValue])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return `new value${formatLegend}`;\n    }\n    if (typeof leftKey === 'number') {\n      return `insert at index ${leftKey}${formatLegend}`;\n    }\n    return `add property ${wrapPropertyName(leftKey)}${formatLegend}`;\n  },\n  modified(delta, left, key, leftKey) {\n    const formatLegend = ' <pre>([previousValue, newValue])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return `modify value${formatLegend}`;\n    }\n    if (typeof leftKey === 'number') {\n      return `modify at index ${leftKey}${formatLegend}`;\n    }\n    return `modify property ${wrapPropertyName(leftKey)}${formatLegend}`;\n  },\n  deleted(delta, left, key, leftKey) {\n    const formatLegend = ' <pre>([previousValue, 0, 0])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return `delete value${formatLegend}`;\n    }\n    if (typeof leftKey === 'number') {\n      return `remove index ${leftKey}${formatLegend}`;\n    }\n    return `delete property ${wrapPropertyName(leftKey)}${formatLegend}`;\n  },\n  moved(delta, left, key, leftKey) {\n    return (\n      'move from <span title=\"(position to remove at original state)\">' +\n      `index ${leftKey}</span> to <span title=\"(position to insert at final` +\n      ` state)\">index ${delta[1]}</span>`\n    );\n  },\n  textdiff(delta, left, key, leftKey) {\n    const location =\n      typeof leftKey === 'undefined'\n        ? ''\n        : typeof leftKey === 'number'\n        ? ` at index ${leftKey}`\n        : ` at property ${wrapPropertyName(leftKey)}`;\n    return (\n      `text diff${location}, format is <a href=\"https://code.google.com/` +\n      'p/google-diff-match-patch/wiki/Unidiff\">a variation of Unidiff</a>'\n    );\n  },\n};\n\nconst formatAnyChange = function <\n  TDeltaType extends keyof DeltaTypeAnnotationsMap,\n>(\n  this: AnnotatedFormatter,\n  context: AnnotatedFormatterContext,\n  delta: DeltaTypeAnnotationsMap[TDeltaType],\n  left: unknown,\n  key: string | undefined,\n  leftKey: string | number | undefined,\n) {\n  const deltaType = this.getDeltaType(delta) as TDeltaType;\n  const annotator = deltaAnnotations[deltaType];\n  const htmlNote = annotator && annotator(delta, left, key, leftKey);\n  let json = JSON.stringify(delta, null, 2);\n  if (deltaType === 'textdiff') {\n    // split text diffs lines\n    json = json.split('\\\\n').join('\\\\n\"+\\n   \"');\n  }\n  context.indent();\n  context.row(json, htmlNote);\n  context.indent(-1);\n};\n\nexport default AnnotatedFormatter;\n\nlet defaultInstance: AnnotatedFormatter | undefined;\n\nexport function format(delta: Delta, left?: unknown) {\n  if (!defaultInstance) {\n    defaultInstance = new AnnotatedFormatter();\n  }\n  return defaultInstance.format(delta, left);\n}\n","import BaseFormatter from './base';\nimport type { BaseFormatterContext } from './base';\nimport type {\n  AddedDelta,\n  ArrayDelta,\n  Delta,\n  ModifiedDelta,\n  ObjectDelta,\n} from '../types';\nimport { MovedDelta } from '../types';\n\nconst OPERATIONS = {\n  add: 'add',\n  remove: 'remove',\n  replace: 'replace',\n  move: 'move',\n} as const;\n\nexport interface AddOp {\n  op: 'add';\n  path: string;\n  value: unknown;\n}\n\nexport interface RemoveOp {\n  op: 'remove';\n  path: string;\n}\n\nexport interface ReplaceOp {\n  op: 'replace';\n  path: string;\n  value: unknown;\n}\n\nexport interface MoveOp {\n  op: 'move';\n  from: string;\n  path: string;\n}\n\nexport type Op = AddOp | RemoveOp | ReplaceOp | MoveOp;\n\ninterface JSONFormatterContext extends BaseFormatterContext {\n  result: Op[];\n  path: (string | number)[];\n  pushCurrentOp: (\n    obj:\n      | { op: 'add'; value: unknown }\n      | { op: 'remove' }\n      | { op: 'replace'; value: unknown },\n  ) => void;\n  pushMoveOp: (to: number) => void;\n  currentPath: () => string;\n  toPath: (to: number) => string;\n}\n\nclass JSONFormatter extends BaseFormatter<JSONFormatterContext, Op[]> {\n  constructor() {\n    super();\n    this.includeMoveDestinations = true;\n  }\n\n  prepareContext(context: Partial<JSONFormatterContext>) {\n    super.prepareContext(context);\n    context.result = [];\n    context.path = [];\n    context.pushCurrentOp = function (obj) {\n      if (obj.op === 'add' || obj.op === 'replace') {\n        this.result!.push({\n          op: obj.op,\n          path: this.currentPath!(),\n          value: obj.value,\n        });\n      } else if (obj.op === 'remove') {\n        this.result!.push({ op: obj.op, path: this.currentPath!() });\n      } else {\n        obj satisfies never;\n      }\n    };\n\n    context.pushMoveOp = function (to) {\n      const from = this.currentPath!();\n      this.result!.push({\n        op: OPERATIONS.move,\n        from,\n        path: this.toPath!(to),\n      });\n    };\n\n    context.currentPath = function () {\n      return `/${this.path!.join('/')}`;\n    };\n\n    context.toPath = function (toPath) {\n      const to = this.path!.slice();\n      to[to.length - 1] = toPath;\n      return `/${to.join('/')}`;\n    };\n  }\n\n  typeFormattterErrorFormatter(context: JSONFormatterContext, err: unknown) {\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    context.out(`[ERROR] ${err}`);\n  }\n\n  rootBegin() {}\n\n  rootEnd() {}\n\n  nodeBegin(\n    { path }: JSONFormatterContext,\n    key: string,\n    leftKey: string | number,\n  ) {\n    path.push(leftKey);\n  }\n\n  nodeEnd({ path }: JSONFormatterContext) {\n    path.pop();\n  }\n\n  format_unchanged() {}\n\n  format_movedestination() {}\n\n  format_node(\n    context: JSONFormatterContext,\n    delta: ObjectDelta | ArrayDelta,\n    left: unknown,\n  ) {\n    this.formatDeltaChildren(context, delta, left);\n  }\n\n  format_added(context: JSONFormatterContext, delta: AddedDelta) {\n    context.pushCurrentOp({ op: OPERATIONS.add, value: delta[0] });\n  }\n\n  format_modified(context: JSONFormatterContext, delta: ModifiedDelta) {\n    context.pushCurrentOp({ op: OPERATIONS.replace, value: delta[1] });\n  }\n\n  format_deleted(context: JSONFormatterContext) {\n    context.pushCurrentOp({ op: OPERATIONS.remove });\n  }\n\n  format_moved(context: JSONFormatterContext, delta: MovedDelta) {\n    const to = delta[1];\n    context.pushMoveOp(to);\n  }\n\n  format_textdiff() {\n    throw new Error('Not implemented');\n  }\n\n  format(delta: Delta, left?: unknown) {\n    const context = {};\n    this.prepareContext(context);\n    const preparedContext = context as JSONFormatterContext;\n    this.recurse(preparedContext, delta, left);\n    return preparedContext.result;\n  }\n}\n\nexport default JSONFormatter;\n\nconst last = <T>(arr: T[]) => arr[arr.length - 1];\n\nconst sortBy = <T>(arr: T[], pred: (a: T, b: T) => number) => {\n  arr.sort(pred);\n  return arr;\n};\n\nconst compareByIndexDesc = (indexA: string, indexB: string) => {\n  const lastA = parseInt(indexA, 10);\n  const lastB = parseInt(indexB, 10);\n  if (!(isNaN(lastA) || isNaN(lastB))) {\n    return lastB - lastA;\n  } else {\n    return 0;\n  }\n};\n\nconst opsByDescendingOrder = (removeOps: Op[]) =>\n  sortBy(removeOps, (a, b) => {\n    const splitA = a.path.split('/');\n    const splitB = b.path.split('/');\n    if (splitA.length !== splitB.length) {\n      return splitA.length - splitB.length;\n    } else {\n      return compareByIndexDesc(last(splitA), last(splitB));\n    }\n  });\n\nexport const partitionOps = (arr: Op[], fns: ((op: Op) => boolean)[]) => {\n  const initArr: Op[][] = Array(fns.length + 1)\n    .fill(undefined)\n    .map(() => []);\n  return arr\n    .map((item) => {\n      let position = fns.map((fn) => fn(item)).indexOf(true);\n      if (position < 0) {\n        position = fns.length;\n      }\n      return { item, position };\n    })\n    .reduce((acc, item) => {\n      acc[item.position].push(item.item);\n      return acc;\n    }, initArr);\n};\nconst isMoveOp = ({ op }: Op) => op === 'move';\nconst isRemoveOp = ({ op }: Op) => op === 'remove';\n\nconst reorderOps = (diff: Op[]) => {\n  const [moveOps, removedOps, restOps] = partitionOps(diff, [\n    isMoveOp,\n    isRemoveOp,\n  ]);\n  const removeOpsReverse = opsByDescendingOrder(removedOps);\n  return [...removeOpsReverse, ...moveOps, ...restOps];\n};\n\nlet defaultInstance: JSONFormatter | undefined;\n\nexport const format = (delta: Delta, left?: unknown) => {\n  if (!defaultInstance) {\n    defaultInstance = new JSONFormatter();\n  }\n  return reorderOps(defaultInstance.format(delta, left));\n};\n\nexport const log = (delta: Delta, left?: unknown) => {\n  console.log(format(delta, left));\n};\n","import * as chalk from 'chalk';\nimport * as BaseFormatter from './base';\nimport type { BaseFormatterContext, DeltaType, NodeType } from './base';\nimport type {\n  AddedDelta,\n  ArrayDelta,\n  DeletedDelta,\n  Delta,\n  ModifiedDelta,\n  MovedDelta,\n  ObjectDelta,\n  TextDiffDelta,\n} from '../types';\n\nconst colors: { [key: string]: chalk.Chalk | undefined } = {\n  added: chalk.green,\n  deleted: chalk.red,\n  movedestination: chalk.gray,\n  moved: chalk.yellow,\n  unchanged: chalk.gray,\n  error: chalk.white.bgRed,\n  textDiffLine: chalk.gray,\n};\n\ninterface ConsoleFormatterContext extends BaseFormatterContext {\n  indentLevel?: number;\n  indentPad?: string;\n  outLine: () => void;\n  indent: (levels?: number) => void;\n  color?: (chalk.Chalk | undefined)[];\n  pushColor: (color: chalk.Chalk | undefined) => void;\n  popColor: () => void;\n}\n\nclass ConsoleFormatter extends BaseFormatter<ConsoleFormatterContext> {\n  constructor() {\n    super();\n    this.includeMoveDestinations = false;\n  }\n\n  prepareContext(context: Partial<ConsoleFormatterContext>) {\n    super.prepareContext(context);\n    context.indent = function (levels) {\n      this.indentLevel =\n        (this.indentLevel || 0) + (typeof levels === 'undefined' ? 1 : levels);\n      this.indentPad = new Array(this.indentLevel + 1).join('  ');\n      this.outLine!();\n    };\n    context.outLine = function () {\n      this.buffer!.push(`\\n${this.indentPad || ''}`);\n    };\n    context.out = function (...args) {\n      for (let i = 0, l = args.length; i < l; i++) {\n        const lines = args[i].split('\\n');\n        let text = lines.join(`\\n${this.indentPad || ''}`);\n        if (this.color && this.color[0]) {\n          text = this.color[0](text);\n        }\n        this.buffer!.push(text);\n      }\n    };\n    context.pushColor = function (color) {\n      this.color = this.color || [];\n      this.color.unshift(color);\n    };\n    context.popColor = function () {\n      this.color = this.color || [];\n      this.color.shift();\n    };\n  }\n\n  typeFormattterErrorFormatter(context: ConsoleFormatterContext, err: unknown) {\n    context.pushColor(colors.error);\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    context.out(`[ERROR]${err}`);\n    context.popColor();\n  }\n\n  formatValue(context: ConsoleFormatterContext, value: unknown) {\n    context.out(JSON.stringify(value, null, 2));\n  }\n\n  formatTextDiffString(context: ConsoleFormatterContext, value: string) {\n    const lines = this.parseTextDiff(value);\n    context.indent();\n    for (let i = 0, l = lines.length; i < l; i++) {\n      const line = lines[i];\n      context.pushColor(colors.textDiffLine);\n      context.out(`${line.location.line},${line.location.chr} `);\n      context.popColor();\n      const pieces = line.pieces;\n      for (\n        let pieceIndex = 0, piecesLength = pieces.length;\n        pieceIndex < piecesLength;\n        pieceIndex++\n      ) {\n        const piece = pieces[pieceIndex];\n        context.pushColor(colors[piece.type]);\n        context.out(piece.text);\n        context.popColor();\n      }\n      if (i < l - 1) {\n        context.outLine();\n      }\n    }\n    context.indent(-1);\n  }\n\n  rootBegin(\n    context: ConsoleFormatterContext,\n    type: DeltaType,\n    nodeType: NodeType,\n  ) {\n    context.pushColor(colors[type]);\n    if (type === 'node') {\n      context.out(nodeType === 'array' ? '[' : '{');\n      context.indent();\n    }\n  }\n\n  rootEnd(\n    context: ConsoleFormatterContext,\n    type: DeltaType,\n    nodeType: NodeType,\n  ) {\n    if (type === 'node') {\n      context.indent(-1);\n      context.out(nodeType === 'array' ? ']' : '}');\n    }\n    context.popColor();\n  }\n\n  nodeBegin(\n    context: ConsoleFormatterContext,\n    key: string,\n    leftKey: string | number,\n    type: DeltaType,\n    nodeType: NodeType,\n  ) {\n    context.pushColor(colors[type]);\n    context.out(`${leftKey}: `);\n    if (type === 'node') {\n      context.out(nodeType === 'array' ? '[' : '{');\n      context.indent();\n    }\n  }\n\n  nodeEnd(\n    context: ConsoleFormatterContext,\n    key: string,\n    leftKey: string | number,\n    type: DeltaType,\n    nodeType: NodeType,\n    isLast: boolean,\n  ) {\n    if (type === 'node') {\n      context.indent(-1);\n      context.out(nodeType === 'array' ? ']' : `}${isLast ? '' : ','}`);\n    }\n    if (!isLast) {\n      context.outLine();\n    }\n    context.popColor();\n  }\n\n  format_unchanged(\n    context: ConsoleFormatterContext,\n    delta: undefined,\n    left: unknown,\n  ) {\n    if (typeof left === 'undefined') {\n      return;\n    }\n    this.formatValue(context, left);\n  }\n\n  format_movedestination(\n    context: ConsoleFormatterContext,\n    delta: undefined,\n    left: unknown,\n  ) {\n    if (typeof left === 'undefined') {\n      return;\n    }\n    this.formatValue(context, left);\n  }\n\n  format_node(\n    context: ConsoleFormatterContext,\n    delta: ObjectDelta | ArrayDelta,\n    left: unknown,\n  ) {\n    // recurse\n    this.formatDeltaChildren(context, delta, left);\n  }\n\n  format_added(context: ConsoleFormatterContext, delta: AddedDelta) {\n    this.formatValue(context, delta[0]);\n  }\n\n  format_modified(context: ConsoleFormatterContext, delta: ModifiedDelta) {\n    context.pushColor(colors.deleted);\n    this.formatValue(context, delta[0]);\n    context.popColor();\n    context.out(' => ');\n    context.pushColor(colors.added);\n    this.formatValue(context, delta[1]);\n    context.popColor();\n  }\n\n  format_deleted(context: ConsoleFormatterContext, delta: DeletedDelta) {\n    this.formatValue(context, delta[0]);\n  }\n\n  format_moved(context: ConsoleFormatterContext, delta: MovedDelta) {\n    context.out(`==> ${delta[1]}`);\n  }\n\n  format_textdiff(context: ConsoleFormatterContext, delta: TextDiffDelta) {\n    this.formatTextDiffString(context, delta[0]);\n  }\n}\n\nexport default ConsoleFormatter;\n\nlet defaultInstance: ConsoleFormatter | undefined;\n\nexport const format = (delta: Delta, left?: unknown) => {\n  if (!defaultInstance) {\n    defaultInstance = new ConsoleFormatter();\n  }\n  return defaultInstance.format(delta, left);\n};\n\nexport function log(delta: Delta, left?: unknown) {\n  console.log(format(delta, left));\n}\n","import DiffPatcher from './diffpatcher';\nimport dateReviver from './date-reviver';\nimport type { Delta, Options } from './types';\nimport type Context from './contexts/context';\nimport type DiffContext from './contexts/diff';\nimport type PatchContext from './contexts/patch';\nimport type ReverseContext from './contexts/reverse';\n\nexport { DiffPatcher, dateReviver };\n\nexport * as formatters from './formatters/index';\n\nexport * as console from './formatters/console';\n\nexport type * from './types';\nexport type { Context, DiffContext, PatchContext, ReverseContext };\n\nexport function create(options?: Options) {\n  return new DiffPatcher(options);\n}\n\nlet defaultInstance: DiffPatcher;\n\nexport function diff(left: unknown, right: unknown) {\n  if (!defaultInstance) {\n    defaultInstance = new DiffPatcher();\n  }\n  return defaultInstance.diff(left, right);\n}\n\nexport function patch(left: unknown, delta: Delta) {\n  if (!defaultInstance) {\n    defaultInstance = new DiffPatcher();\n  }\n  return defaultInstance.patch(left, delta);\n}\n\nexport function unpatch(right: unknown, delta: Delta) {\n  if (!defaultInstance) {\n    defaultInstance = new DiffPatcher();\n  }\n  return defaultInstance.unpatch(right, delta);\n}\n\nexport function reverse(delta: Delta) {\n  if (!defaultInstance) {\n    defaultInstance = new DiffPatcher();\n  }\n  return defaultInstance.reverse(delta);\n}\n\nexport function clone(value: unknown) {\n  if (!defaultInstance) {\n    defaultInstance = new DiffPatcher();\n  }\n  return defaultInstance.clone(value);\n}\n"],"names":["Processor","constructor","options","selfOptions","pipes","pipe","name","pipeArg","processor","process","input","context","nextPipe","lastPipe","nextAfterChildren","next","hasResult","result","undefined","Pipe","filters","Error","debug","length","index","filter","log","filterName","exiting","resultCheck","msg","console","append","push","arguments","prepend","unshift","indexOf","list","map","f","after","_len","params","Array","_key","splice","before","_len2","_key2","replace","_len3","_key3","remove","clear","shouldHaveResult","should","error","noResult","Context","setResult","exit","child","parent","childName","root","children","cloneRegExp","re","regexMatch","exec","toString","RegExp","clone","arg","isArray","Date","getTime","cloned","Object","prototype","hasOwnProperty","call","DiffContext","left","right","cloneDiffValues","defaultClone","PatchContext","delta","ReverseContext","diffFilter","trivialMatchesDiffFilter","leftType","rightType","leftIsArray","rightIsArray","patchFilter","trivialMatchesPatchFilter","nested","nonNestedDelta","regexArgs","reverseFilter","trivialReferseFilter","collectChildrenDiffFilter","_t","objectsDiffFilter","propertyFilter","nestedPatchFilter","nestedDelta","objectDelta","collectChildrenPatchFilter","deltaWithChildren","object","property","nestedReverseFilter","collectChildrenReverseFilter","defaultMatch","array1","array2","index1","index2","lengthMatrix","match","len1","len2","x","y","matrix","Math","max","backtrack","subsequence","sequence","indices1","indices2","sameLetter","valueAtMatrixAbove","valueAtMatrixLeft","get","innerContext","ARRAY_MOVE","arraysHaveMatchByRef","val1","val2","matchItems","value1","value2","objectHash","matchByPosition","hashCache1","hash1","hashCache2","hash2","arraysDiffFilter","matchContext","commonHead","commonTail","trimmed1","slice","trimmed2","seq","lcs","removedItems","detectMove","arrays","includeValueOnMove","removedItemsLength","indexOnArray2","isMove","removeItemIndex1","compare","numerically","a","b","numericallyBy","array","toRemove","toInsert","toModify","removedOrMovedIndex","parseInt","numberIndex","value","sort","indexDiff","removedValue","toInsertLength","insertion","toModifyLength","modification","arrayIndex","arraysReverseFilter","arrayMoveDelta","newName","substring","arrayDelta","reverseArrayDeltaIndex","itemDelta","reverseIndex","deltaIndex","deltaItem","moveFromIndex","moveToIndex","deleteIndex","datesDiffFilter","TEXT_DIFF","DEFAULT_MIN_LENGTH","cachedDiffPatch","getDiffMatchPatch","required","instance","diff_match_patch","dmp","err","diff_match_patch_not_found","diff","txt1","txt2","patch_toText","patch_make","patch","results","patch_apply","patch_fromText","i","textPatchFailed","textsDiffFilter","minLength","textDiff","diffMatchPatch","textsPatchFilter","textDiffDelta","textDeltaReverse","l","line","lineTmp","header","headerRegex","lineHeader","lines","split","lineStart","join","textsReverseFilter","DiffPatcher","trivial","dates","texts","reverse","unpatch","dateReviver","key","parts","UTC","trimUnderscore","str","arrayKeyToSortNumber","arrayKeyComparer","key1","key2","BaseFormatter","format","prepareContext","preparedContext","recurse","finalize","buffer","out","typeFormattterNotFound","deltaType","typeFormattterErrorFormatter","leftValue","leftKey","movedFrom","_ref","isLast","useMoveOriginHere","type","getDeltaType","nodeType","nodeBegin","rootBegin","typeFormattter","stack","nodeEnd","rootEnd","formatDeltaChildren","forEachDeltaKey","fn","keys","arrayKeys","moveDestinations","movedDelta","includeMoveDestinations","parseTextDiff","output","lineOutput","pieces","location","chr","pieceIndex","piecesLength","piece","pieceOutput","text","HtmlFormatter","formatValue","htmlEscape","JSON","stringify","formatTextDiffString","decodeURI","nodeClass","hasArrows","adjustArrows","format_unchanged","format_movedestination","format_node","format_added","format_modified","format_deleted","format_moved","format_textdiff","html","replacements","jsondiffpatchHtmlFormatterAdjustArrows","nodeArg","node","document","getElementText","textContent","innerText","eachByQuery","el","query","elems","querySelectorAll","eachChildren","_ref2","_ref3","parentNode","style","arrowParent","svg","path","display","destination","querySelector","container","destinationElem","getAttribute","distance","offsetTop","setAttribute","abs","top","curve","round","showUnchanged","show","delay","body","prefix","classes","showing","hiding","visible","hidden","classList","add","setTimeout","intervalId","setInterval","clearInterval","hideUnchanged","defaultInstance","AnnotatedFormatter","indent","levels","indentLevel","indentPad","row","json","htmlNote","formatAnyChange","wrapPropertyName","deltaAnnotations","added","formatLegend","modified","deleted","moved","textdiff","annotator","OPERATIONS","move","JSONFormatter","pushCurrentOp","obj","op","currentPath","pushMoveOp","to","from","toPath","pop","last","arr","sortBy","pred","compareByIndexDesc","indexA","indexB","lastA","lastB","isNaN","opsByDescendingOrder","removeOps","splitA","splitB","partitionOps","fns","initArr","fill","item","position","reduce","acc","isMoveOp","isRemoveOp","_ref4","reorderOps","moveOps","removedOps","restOps","removeOpsReverse","colors","chalk","green","red","movedestination","gray","yellow","unchanged","white","bgRed","textDiffLine","ConsoleFormatter","outLine","args","color","pushColor","popColor","shift","create"],"mappings":"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"}